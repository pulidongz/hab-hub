{"ast":null,"code":"import _classCallCheck from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Tooltip as LeafletTooltip } from 'leaflet';\nimport { withLeaflet } from './context';\nimport DivOverlay from './DivOverlay';\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_DivOverlay) {\n  _inherits(Tooltip, _DivOverlay);\n\n  function Tooltip() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tooltip);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tooltip)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onTooltipOpen = function (_ref) {\n      var tooltip = _ref.tooltip;\n\n      if (tooltip === _this.leafletElement) {\n        _this.onOpen();\n      }\n    };\n\n    _this.onTooltipClose = function (_ref2) {\n      var tooltip = _ref2.tooltip;\n\n      if (tooltip === _this.leafletElement) {\n        _this.onClose();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"createLeafletElement\",\n    value: function createLeafletElement(props) {\n      return new LeafletTooltip(this.getOptions(props), props.leaflet.popupContainer);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var popupContainer = this.props.leaflet.popupContainer;\n      if (popupContainer == null) return;\n      popupContainer.on({\n        tooltipopen: this.onTooltipOpen,\n        tooltipclose: this.onTooltipClose\n      });\n      popupContainer.bindTooltip(this.leafletElement);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var popupContainer = this.props.leaflet.popupContainer;\n      if (popupContainer == null) return;\n      popupContainer.off({\n        tooltipopen: this.onTooltipOpen,\n        tooltipclose: this.onTooltipClose\n      });\n\n      if (popupContainer._map != null) {\n        popupContainer.unbindTooltip(this.leafletElement);\n      }\n    }\n  }]);\n\n  return Tooltip;\n}(DivOverlay);\n\nTooltip.defaultProps = {\n  pane: 'tooltipPane'\n};\nexport default withLeaflet(Tooltip);","map":{"version":3,"sources":["/home/pul/hab_ews/frontend/hab_ews/src/Tooltip.js"],"names":["Tooltip","LeafletTooltip","withLeaflet","DivOverlay","onTooltipOpen","tooltip","leafletElement","onOpen","onTooltipClose","onClose","props","getOptions","leaflet","popupContainer","on","tooltipopen","tooltipclose","bindTooltip","off","_map","unbindTooltip","defaultProps","pane"],"mappings":";;;;;AAEA,SAASA,OAAO,IAAIC,cAApB,QAA0C,SAA1C;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAMMH,O;;;;;;;;;;;;;;;;;;UAoCJI,a,GAAgB,gBAA8C;AAAA,UAA3CC,OAA2C,QAA3CA,OAA2C;;AAC5D,UAAIA,OAAO,KAAK,MAAKC,cAArB,EAAqC;AACnC,cAAKC,MAAL;AACD;AACF,K;;UAEDC,c,GAAiB,iBAA8C;AAAA,UAA3CH,OAA2C,SAA3CA,OAA2C;;AAC7D,UAAIA,OAAO,KAAK,MAAKC,cAArB,EAAqC;AACnC,cAAKG,OAAL;AACD;AACF,K;;;;;;;yCAzCoBC,K,EAA8B;AACjD,aAAO,IAAIT,cAAJ,CACL,KAAKU,UAAL,CAAgBD,KAAhB,CADK,EAELA,KAAK,CAACE,OAAN,CAAcC,cAFT,CAAP;AAID;;;wCAEmB;AAAA,UACVA,cADU,GACS,KAAKH,KAAL,CAAWE,OADpB,CACVC,cADU;AAElB,UAAIA,cAAc,IAAI,IAAtB,EAA4B;AAE5BA,MAAAA,cAAc,CAACC,EAAf,CAAkB;AAChBC,QAAAA,WAAW,EAAE,KAAKX,aADF;AAEhBY,QAAAA,YAAY,EAAE,KAAKR;AAFH,OAAlB;AAIAK,MAAAA,cAAc,CAACI,WAAf,CAA2B,KAAKX,cAAhC;AACD;;;2CAEsB;AAAA,UACbO,cADa,GACM,KAAKH,KAAL,CAAWE,OADjB,CACbC,cADa;AAErB,UAAIA,cAAc,IAAI,IAAtB,EAA4B;AAE5BA,MAAAA,cAAc,CAACK,GAAf,CAAmB;AACjBH,QAAAA,WAAW,EAAE,KAAKX,aADD;AAEjBY,QAAAA,YAAY,EAAE,KAAKR;AAFF,OAAnB;;AAIA,UAAIK,cAAc,CAACM,IAAf,IAAuB,IAA3B,EAAiC;AAC/BN,QAAAA,cAAc,CAACO,aAAf,CAA6B,KAAKd,cAAlC;AACD;AACF;;;;EAlCmBH,U;;AAAhBH,O,CACGqB,Y,GAAe;AACpBC,EAAAA,IAAI,EAAE;AADc,C;AAgDxB,eAAepB,WAAW,CAAiBF,OAAjB,CAA1B","sourcesContent":["// @flow\n\nimport { Tooltip as LeafletTooltip } from 'leaflet'\n\nimport { withLeaflet } from './context'\nimport DivOverlay from './DivOverlay'\nimport type { DivOverlayProps } from './types'\n\ntype LeafletElement = LeafletTooltip\ntype Props = DivOverlayProps\n\nclass Tooltip extends DivOverlay<LeafletElement, Props> {\n  static defaultProps = {\n    pane: 'tooltipPane',\n  }\n\n  createLeafletElement(props: Props): LeafletElement {\n    return new LeafletTooltip(\n      this.getOptions(props),\n      props.leaflet.popupContainer,\n    )\n  }\n\n  componentDidMount() {\n    const { popupContainer } = this.props.leaflet\n    if (popupContainer == null) return\n\n    popupContainer.on({\n      tooltipopen: this.onTooltipOpen,\n      tooltipclose: this.onTooltipClose,\n    })\n    popupContainer.bindTooltip(this.leafletElement)\n  }\n\n  componentWillUnmount() {\n    const { popupContainer } = this.props.leaflet\n    if (popupContainer == null) return\n\n    popupContainer.off({\n      tooltipopen: this.onTooltipOpen,\n      tooltipclose: this.onTooltipClose,\n    })\n    if (popupContainer._map != null) {\n      popupContainer.unbindTooltip(this.leafletElement)\n    }\n  }\n\n  onTooltipOpen = ({ tooltip }: { tooltip: LeafletElement }) => {\n    if (tooltip === this.leafletElement) {\n      this.onOpen()\n    }\n  }\n\n  onTooltipClose = ({ tooltip }: { tooltip: LeafletElement }) => {\n    if (tooltip === this.leafletElement) {\n      this.onClose()\n    }\n  }\n}\n\nexport default withLeaflet<Props, Tooltip>(Tooltip)\n"]},"metadata":{},"sourceType":"module"}