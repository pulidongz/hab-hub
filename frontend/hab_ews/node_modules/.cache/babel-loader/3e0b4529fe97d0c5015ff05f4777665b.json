{"ast":null,"code":"import _classCallCheck from \"/home/biome/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biome/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/biome/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/biome/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/biome/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/biome/hab_ews/frontend/hab_ews/src/leaflet/examples/tooltip.js\";\nimport React, { Component } from 'react';\nimport { Circle, CircleMarker, Map, Marker, Polygon, Popup, Rectangle, TileLayer, Tooltip } from 'react-leaflet';\nvar center = [51.505, -0.09];\nvar multiPolygon = [[[51.51, -0.12], [51.51, -0.13], [51.53, -0.13]], [[51.51, -0.05], [51.51, -0.07], [51.53, -0.07]]];\nvar rectangle = [[51.49, -0.08], [51.5, -0.06]];\n\nvar TooltipExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TooltipExample, _Component);\n\n  function TooltipExample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TooltipExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TooltipExample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      clicked: 0\n    };\n\n    _this.onClickCircle = function () {\n      _this.setState({\n        clicked: _this.state.clicked + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TooltipExample, [{\n    key: \"render\",\n    value: function render() {\n      var clickedText = this.state.clicked === 0 ? 'Click this Circle to change the Tooltip text' : \"Circle click: \".concat(this.state.clicked);\n      return React.createElement(Map, {\n        center: center,\n        zoom: 13,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Circle, {\n        center: center,\n        fillColor: \"blue\",\n        onClick: this.onClickCircle,\n        radius: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, clickedText)), React.createElement(CircleMarker, {\n        center: [51.51, -0.12],\n        color: \"red\",\n        radius: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Tooltip for CircleMarker\")), React.createElement(Marker, {\n        position: [51.51, -0.09],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Popup for Marker\"), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Tooltip for Marker\")), React.createElement(Polygon, {\n        color: \"purple\",\n        positions: multiPolygon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        sticky: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"sticky Tooltip for Polygon\")), React.createElement(Rectangle, {\n        bounds: rectangle,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        direction: \"bottom\",\n        offset: [0, 20],\n        opacity: 1,\n        permanent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"permanent Tooltip for Rectangle\")));\n    }\n  }]);\n\n  return TooltipExample;\n}(Component);\n\nexport { TooltipExample as default };","map":{"version":3,"sources":["/home/biome/hab_ews/frontend/hab_ews/src/leaflet/examples/tooltip.js"],"names":["React","Component","Circle","CircleMarker","Map","Marker","Polygon","Popup","Rectangle","TileLayer","Tooltip","center","multiPolygon","rectangle","TooltipExample","state","clicked","onClickCircle","setState","clickedText"],"mappings":"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","sourcesContent":["// @flow\n\nimport React, { Component } from 'react'\nimport {\n  Circle,\n  CircleMarker,\n  Map,\n  Marker,\n  Polygon,\n  Popup,\n  Rectangle,\n  TileLayer,\n  Tooltip,\n} from 'react-leaflet'\n\nconst center = [51.505, -0.09]\n\nconst multiPolygon = [\n  [[51.51, -0.12], [51.51, -0.13], [51.53, -0.13]],\n  [[51.51, -0.05], [51.51, -0.07], [51.53, -0.07]],\n]\n\nconst rectangle = [[51.49, -0.08], [51.5, -0.06]]\n\nexport default class TooltipExample extends Component<{}, { clicked: number }> {\n  state = {\n    clicked: 0,\n  }\n\n  onClickCircle = () => {\n    this.setState({ clicked: this.state.clicked + 1 })\n  }\n\n  render() {\n    const clickedText =\n      this.state.clicked === 0\n        ? 'Click this Circle to change the Tooltip text'\n        : `Circle click: ${this.state.clicked}`\n\n    return (\n      <Map center={center} zoom={13}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Circle\n          center={center}\n          fillColor=\"blue\"\n          onClick={this.onClickCircle}\n          radius={200}>\n          <Tooltip>{clickedText}</Tooltip>\n        </Circle>\n        <CircleMarker center={[51.51, -0.12]} color=\"red\" radius={20}>\n          <Tooltip>Tooltip for CircleMarker</Tooltip>\n        </CircleMarker>\n        <Marker position={[51.51, -0.09]}>\n          <Popup>Popup for Marker</Popup>\n          <Tooltip>Tooltip for Marker</Tooltip>\n        </Marker>\n        <Polygon color=\"purple\" positions={multiPolygon}>\n          <Tooltip sticky>sticky Tooltip for Polygon</Tooltip>\n        </Polygon>\n        <Rectangle bounds={rectangle} color=\"black\">\n          <Tooltip direction=\"bottom\" offset={[0, 20]} opacity={1} permanent>\n            permanent Tooltip for Rectangle\n          </Tooltip>\n        </Rectangle>\n      </Map>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}