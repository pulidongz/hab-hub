{"ast":null,"code":"import _objectSpread from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Component } from 'react';\nexport var EVENTS_RE = /^on(.+)$/i;\n\nvar MapEvented =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapEvented, _Component);\n\n  function MapEvented(props) {\n    var _this;\n\n    _classCallCheck(this, MapEvented);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapEvented).call(this, props));\n    _this._leafletEvents = _this.extractLeafletEvents(props);\n    return _this;\n  }\n\n  _createClass(MapEvented, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.bindLeafletEvents(this._leafletEvents);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_prevProps) {\n      this._leafletEvents = this.bindLeafletEvents(this.extractLeafletEvents(this.props), this._leafletEvents);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this2 = this;\n\n      var el = this.leafletElement;\n      if (!el) return;\n      Object.keys(this._leafletEvents).forEach(function (ev) {\n        el.off(ev, _this2._leafletEvents[ev]);\n      });\n    }\n  }, {\n    key: \"extractLeafletEvents\",\n    value: function extractLeafletEvents(props) {\n      return Object.keys(props).reduce(function (res, prop) {\n        if (EVENTS_RE.test(prop)) {\n          if (props[prop] != null) {\n            var _key = prop.replace(EVENTS_RE, function (match, p) {\n              return p.toLowerCase();\n            });\n\n            res[_key] = props[prop];\n          }\n        }\n\n        return res;\n      }, {});\n    }\n  }, {\n    key: \"bindLeafletEvents\",\n    value: function bindLeafletEvents() {\n      var next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var prev = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var el = this.leafletElement;\n      if (el == null || el.on == null) return {};\n\n      var diff = _objectSpread({}, prev);\n\n      Object.keys(prev).forEach(function (ev) {\n        if (next[ev] == null || prev[ev] !== next[ev]) {\n          delete diff[ev];\n          el.off(ev, prev[ev]);\n        }\n      });\n      Object.keys(next).forEach(function (ev) {\n        if (prev[ev] == null || next[ev] !== prev[ev]) {\n          diff[ev] = next[ev];\n          el.on(ev, next[ev]);\n        }\n      });\n      return diff;\n    }\n  }, {\n    key: \"fireLeafletEvent\",\n    value: function fireLeafletEvent(type, data) {\n      var el = this.leafletElement;\n      if (el) el.fire(type, data);\n    }\n  }]);\n\n  return MapEvented;\n}(Component);\n\nexport { MapEvented as default };","map":{"version":3,"sources":["/home/pul/hab_ews/frontend/hab_ews/src/MapEvented.js"],"names":["Component","EVENTS_RE","MapEvented","props","_leafletEvents","extractLeafletEvents","bindLeafletEvents","_prevProps","el","leafletElement","Object","keys","forEach","ev","off","reduce","res","prop","test","key","replace","match","p","toLowerCase","next","prev","on","diff","type","data","fire"],"mappings":"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","sourcesContent":["// @flow\n\nimport type { Evented } from 'leaflet'\nimport { Component } from 'react'\n\nexport const EVENTS_RE = /^on(.+)$/i\n\ntype EventHandler = (event: Event) => void\ntype EventsObject = { [key: string]: EventHandler }\n\nexport default class MapEvented<\n  LeafletElement: Evented,\n  Props: Object,\n> extends Component<Props> {\n  _leafletEvents: EventsObject\n  leafletElement: LeafletElement\n\n  constructor(props: Props) {\n    super(props)\n    this._leafletEvents = this.extractLeafletEvents(props)\n  }\n\n  componentDidMount() {\n    this.bindLeafletEvents(this._leafletEvents)\n  }\n\n  componentDidUpdate(_prevProps: Props) {\n    this._leafletEvents = this.bindLeafletEvents(\n      this.extractLeafletEvents(this.props),\n      this._leafletEvents,\n    )\n  }\n\n  componentWillUnmount() {\n    const el = this.leafletElement\n    if (!el) return\n\n    Object.keys(this._leafletEvents).forEach(ev => {\n      el.off(ev, this._leafletEvents[ev])\n    })\n  }\n\n  extractLeafletEvents(props: Props): EventsObject {\n    return Object.keys(props).reduce((res, prop) => {\n      if (EVENTS_RE.test(prop)) {\n        if (props[prop] != null) {\n          const key = prop.replace(EVENTS_RE, (match, p) => p.toLowerCase())\n          res[key] = props[prop]\n        }\n      }\n      return res\n    }, {})\n  }\n\n  bindLeafletEvents(\n    next: EventsObject = {},\n    prev: EventsObject = {},\n  ): EventsObject {\n    const el = this.leafletElement\n    if (el == null || el.on == null) return {}\n\n    const diff = { ...prev }\n    Object.keys(prev).forEach(ev => {\n      if (next[ev] == null || prev[ev] !== next[ev]) {\n        delete diff[ev]\n        el.off(ev, prev[ev])\n      }\n    })\n\n    Object.keys(next).forEach(ev => {\n      if (prev[ev] == null || next[ev] !== prev[ev]) {\n        diff[ev] = next[ev]\n        el.on(ev, next[ev])\n      }\n    })\n\n    return diff\n  }\n\n  fireLeafletEvent(type: string, data: ?any) {\n    const el = this.leafletElement\n    if (el) el.fire(type, data)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}