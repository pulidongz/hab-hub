{"ast":null,"code":"import _classCallCheck from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nimport { withLeaflet } from './context';\nimport GridLayer from './GridLayer';\n\nvar TileLayer =\n/*#__PURE__*/\nfunction (_GridLayer) {\n  _inherits(TileLayer, _GridLayer);\n\n  function TileLayer() {\n    _classCallCheck(this, TileLayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TileLayer).apply(this, arguments));\n  }\n\n  _createClass(TileLayer, [{\n    key: \"createLeafletElement\",\n    value: function createLeafletElement(props) {\n      return new LeafletTileLayer(props.url, this.getOptions(props));\n    }\n  }, {\n    key: \"updateLeafletElement\",\n    value: function updateLeafletElement(fromProps, toProps) {\n      _get(_getPrototypeOf(TileLayer.prototype), \"updateLeafletElement\", this).call(this, fromProps, toProps);\n\n      if (toProps.url !== fromProps.url) {\n        this.leafletElement.setUrl(toProps.url);\n      }\n    }\n  }]);\n\n  return TileLayer;\n}(GridLayer);\n\nexport default withLeaflet(TileLayer);","map":{"version":3,"sources":["/home/pul/hab_ews/frontend/hab_ews/src/TileLayer.js"],"names":["TileLayer","LeafletTileLayer","withLeaflet","GridLayer","props","url","getOptions","fromProps","toProps","leafletElement","setUrl"],"mappings":";;;;;;AAEA,SAASA,SAAS,IAAIC,gBAAtB,QAA8C,SAA9C;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAMMH,S;;;;;;;;;;;;;yCACiBI,K,EAA8B;AACjD,aAAO,IAAIH,gBAAJ,CAAqBG,KAAK,CAACC,GAA3B,EAAgC,KAAKC,UAAL,CAAgBF,KAAhB,CAAhC,CAAP;AACD;;;yCAEoBG,S,EAAkBC,O,EAAgB;AACrD,0FAA2BD,SAA3B,EAAsCC,OAAtC;;AACA,UAAIA,OAAO,CAACH,GAAR,KAAgBE,SAAS,CAACF,GAA9B,EAAmC;AACjC,aAAKI,cAAL,CAAoBC,MAApB,CAA2BF,OAAO,CAACH,GAAnC;AACD;AACF;;;;EAVqBF,S;;AAaxB,eAAeD,WAAW,CAAmBF,SAAnB,CAA1B","sourcesContent":["// @flow\n\nimport { TileLayer as LeafletTileLayer } from 'leaflet'\n\nimport { withLeaflet } from './context'\nimport GridLayer from './GridLayer'\nimport type { GridLayerProps } from './types'\n\ntype LeafletElement = LeafletTileLayer\ntype Props = { url: string } & GridLayerProps\n\nclass TileLayer extends GridLayer<LeafletElement, Props> {\n  createLeafletElement(props: Props): LeafletElement {\n    return new LeafletTileLayer(props.url, this.getOptions(props))\n  }\n\n  updateLeafletElement(fromProps: Props, toProps: Props) {\n    super.updateLeafletElement(fromProps, toProps)\n    if (toProps.url !== fromProps.url) {\n      this.leafletElement.setUrl(toProps.url)\n    }\n  }\n}\n\nexport default withLeaflet<Props, TileLayer>(TileLayer)\n"]},"metadata":{},"sourceType":"module"}