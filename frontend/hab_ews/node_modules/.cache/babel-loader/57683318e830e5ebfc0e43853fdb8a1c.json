{"ast":null,"code":"var _jsxFileName = \"/home/pul/hab_ews/frontend/hab_ews/src/context.js\";\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport React, { createContext, forwardRef, useContext } from 'react';\nvar leafletContext = createContext({});\nexport var useLeaflet = function useLeaflet() {\n  return useContext(leafletContext);\n};\nexport var LeafletConsumer = leafletContext.Consumer;\nexport var LeafletProvider = leafletContext.Provider;\nexport var withLeaflet = function withLeaflet(WrappedComponent) {\n  var WithLeafletComponent = function WithLeafletComponent(props, ref) {\n    return React.createElement(LeafletConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, function (leaflet) {\n      return React.createElement(WrappedComponent, Object.assign({}, props, {\n        leaflet: leaflet,\n        ref: ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    });\n  };\n\n  var name = // flowlint-next-line sketchy-null-string:off\n  WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  WithLeafletComponent.displayName = \"Leaflet(\".concat(name, \")\");\n  var LeafletComponent = forwardRef(WithLeafletComponent);\n  hoistNonReactStatics(LeafletComponent, WrappedComponent);\n  return LeafletComponent;\n};","map":{"version":3,"sources":["/home/pul/hab_ews/frontend/hab_ews/src/context.js"],"names":["hoistNonReactStatics","React","createContext","forwardRef","useContext","leafletContext","useLeaflet","LeafletConsumer","Consumer","LeafletProvider","Provider","withLeaflet","WrappedComponent","WithLeafletComponent","props","ref","leaflet","name","displayName","LeafletComponent"],"mappings":";AAEA,OAAOA,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,KAAP,IACEC,aADF,EAEEC,UAFF,EAGEC,UAHF,QAKO,OALP;AASA,IAAMC,cAAc,GAAGH,aAAa,CAAiB,EAAjB,CAApC;AAEA,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAsBF,UAAU,CAACC,cAAD,CAAhC;AAAA,CAAnB;AAEP,OAAO,IAAME,eAAe,GAAGF,cAAc,CAACG,QAAvC;AACP,OAAO,IAAMC,eAAe,GAAGJ,cAAc,CAACK,QAAvC;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CACzBC,gBADyB,EAEmD;AAC5E,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAQC,GAAR;AAAA,WAC3B,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,UAACC,OAAD;AAAA,aACC,oBAAC,gBAAD,oBAAsBF,KAAtB;AAA6B,QAAA,OAAO,EAAEE,OAAtC;AAA+C,QAAA,GAAG,EAAED,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADD;AAAA,KADH,CAD2B;AAAA,GAA7B;;AAQA,MAAME,IAAI,GAAG;AACXL,EAAAA,gBAAgB,CAACM,WAAjB,IAAgCN,gBAAgB,CAACK,IAAjD,IAAyD,WAD3D;AAEAJ,EAAAA,oBAAoB,CAACK,WAArB,qBAA8CD,IAA9C;AAEA,MAAME,gBAAgB,GAAGhB,UAAU,CAACU,oBAAD,CAAnC;AACAb,EAAAA,oBAAoB,CAACmB,gBAAD,EAAmBP,gBAAnB,CAApB;AAEA,SAAOO,gBAAP;AACD,CAnBM","sourcesContent":["// @flow\n\nimport hoistNonReactStatics from 'hoist-non-react-statics'\nimport React, {\n  createContext,\n  forwardRef,\n  useContext,\n  type AbstractComponent,\n} from 'react'\n\nimport type { LeafletContext } from './types'\n\nconst leafletContext = createContext<LeafletContext>({})\n\nexport const useLeaflet = (): LeafletContext => useContext(leafletContext)\n\nexport const LeafletConsumer = leafletContext.Consumer\nexport const LeafletProvider = leafletContext.Provider\n\nexport const withLeaflet = <Config: { leaflet: LeafletContext }, Instance>(\n  WrappedComponent: AbstractComponent<Config, Instance>,\n): AbstractComponent<$Diff<Config, { leaflet: LeafletContext }>, Instance> => {\n  const WithLeafletComponent = (props, ref) => (\n    <LeafletConsumer>\n      {(leaflet: LeafletContext) => (\n        <WrappedComponent {...props} leaflet={leaflet} ref={ref} />\n      )}\n    </LeafletConsumer>\n  )\n\n  const name = // flowlint-next-line sketchy-null-string:off\n    WrappedComponent.displayName || WrappedComponent.name || 'Component'\n  WithLeafletComponent.displayName = `Leaflet(${name})`\n\n  const LeafletComponent = forwardRef(WithLeafletComponent)\n  hoistNonReactStatics(LeafletComponent, WrappedComponent)\n\n  return LeafletComponent\n}\n"]},"metadata":{},"sourceType":"module"}