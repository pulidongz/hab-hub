{"ast":null,"code":"import _classCallCheck from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pul/hab_ews/frontend/hab_ews/src/leaflet/examples/draggable-marker.js\";\nimport React, { Component, createRef } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\n\nvar DraggableExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DraggableExample, _Component);\n\n  function DraggableExample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DraggableExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DraggableExample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      center: {\n        lat: 51.505,\n        lng: -0.09\n      },\n      marker: {\n        lat: 51.505,\n        lng: -0.09\n      },\n      zoom: 13,\n      draggable: true // $FlowFixMe: ref\n\n    };\n    _this.refmarker = createRef();\n\n    _this.toggleDraggable = function () {\n      _this.setState({\n        draggable: !_this.state.draggable\n      });\n    };\n\n    _this.updatePosition = function () {\n      var marker = _this.refmarker.current;\n\n      if (marker != null) {\n        _this.setState({\n          marker: marker.leafletElement.getLatLng()\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DraggableExample, [{\n    key: \"render\",\n    value: function render() {\n      var position = [this.state.center.lat, this.state.center.lng];\n      var markerPosition = [this.state.marker.lat, this.state.marker.lng];\n      return React.createElement(Map, {\n        center: position,\n        zoom: this.state.zoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        draggable: this.state.draggable,\n        onDragend: this.updatePosition,\n        position: markerPosition,\n        ref: this.refmarker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        minWidth: 90,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: this.toggleDraggable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.draggable ? 'DRAG MARKER' : 'MARKER FIXED'))));\n    }\n  }]);\n\n  return DraggableExample;\n}(Component);\n\nexport { DraggableExample as default };","map":{"version":3,"sources":["/home/pul/hab_ews/frontend/hab_ews/src/leaflet/examples/draggable-marker.js"],"names":["React","Component","createRef","Map","TileLayer","Marker","Popup","DraggableExample","state","center","lat","lng","marker","zoom","draggable","refmarker","toggleDraggable","setState","updatePosition","current","leafletElement","getLatLng","position","markerPosition"],"mappings":";;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,eAA9C;;IAWqBC,gB;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,MADC;AAENC,QAAAA,GAAG,EAAE,CAAC;AAFA,OADF;AAKNC,MAAAA,MAAM,EAAE;AACNF,QAAAA,GAAG,EAAE,MADC;AAENC,QAAAA,GAAG,EAAE,CAAC;AAFA,OALF;AASNE,MAAAA,IAAI,EAAE,EATA;AAUNC,MAAAA,SAAS,EAAE,IAVL,CAYR;;AAZQ,K;UAaRC,S,GAAYb,SAAS,E;;UAErBc,e,GAAkB,YAAM;AACtB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE,CAAC,MAAKN,KAAL,CAAWM;AAAzB,OAAd;AACD,K;;UAEDI,c,GAAiB,YAAM;AACrB,UAAMN,MAAM,GAAG,MAAKG,SAAL,CAAeI,OAA9B;;AACA,UAAIP,MAAM,IAAI,IAAd,EAAoB;AAClB,cAAKK,QAAL,CAAc;AACZL,UAAAA,MAAM,EAAEA,MAAM,CAACQ,cAAP,CAAsBC,SAAtB;AADI,SAAd;AAGD;AACF,K;;;;;;;6BAEQ;AACP,UAAMC,QAAQ,GAAG,CAAC,KAAKd,KAAL,CAAWC,MAAX,CAAkBC,GAAnB,EAAwB,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,GAA1C,CAAjB;AACA,UAAMY,cAAc,GAAG,CAAC,KAAKf,KAAL,CAAWI,MAAX,CAAkBF,GAAnB,EAAwB,KAAKF,KAAL,CAAWI,MAAX,CAAkBD,GAA1C,CAAvB;AAEA,aACE,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAEW,QAAb;AAAuB,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWK,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,2EADd;AAEE,QAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWM,SADxB;AAEE,QAAA,SAAS,EAAE,KAAKI,cAFlB;AAGE,QAAA,QAAQ,EAAEK,cAHZ;AAIE,QAAA,GAAG,EAAE,KAAKR,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAE,KAAKC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKR,KAAL,CAAWM,SAAX,GAAuB,aAAvB,GAAuC,cAD1C,CADF,CALF,CALF,CADF;AAmBD;;;;EApD2Cb,S;;SAAzBM,gB","sourcesContent":["// @flow\n\nimport React, { Component, createRef } from 'react'\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\n\ntype Position = { lat: number, lng: number }\n\ntype State = {\n  center: Position,\n  marker: Position,\n  zoom: number,\n  draggable: boolean,\n}\n\nexport default class DraggableExample extends Component<{}, State> {\n  state = {\n    center: {\n      lat: 51.505,\n      lng: -0.09,\n    },\n    marker: {\n      lat: 51.505,\n      lng: -0.09,\n    },\n    zoom: 13,\n    draggable: true,\n  }\n  // $FlowFixMe: ref\n  refmarker = createRef<Marker>()\n\n  toggleDraggable = () => {\n    this.setState({ draggable: !this.state.draggable })\n  }\n\n  updatePosition = () => {\n    const marker = this.refmarker.current\n    if (marker != null) {\n      this.setState({\n        marker: marker.leafletElement.getLatLng(),\n      })\n    }\n  }\n\n  render() {\n    const position = [this.state.center.lat, this.state.center.lng]\n    const markerPosition = [this.state.marker.lat, this.state.marker.lng]\n\n    return (\n      <Map center={position} zoom={this.state.zoom}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker\n          draggable={this.state.draggable}\n          onDragend={this.updatePosition}\n          position={markerPosition}\n          ref={this.refmarker}>\n          <Popup minWidth={90}>\n            <span onClick={this.toggleDraggable}>\n              {this.state.draggable ? 'DRAG MARKER' : 'MARKER FIXED'}\n            </span>\n          </Popup>\n        </Marker>\n      </Map>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}