{"ast":null,"code":"import _classCallCheck from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pul/hab_ews/frontend/hab_ews/src/leaflet/simple.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Circle, FeatureGroup, LayerGroup, LayersControl, Map, Marker, Popup, Rectangle, TileLayer } from 'react-leaflet';\nvar BaseLayer = LayersControl.BaseLayer,\n    Overlay = LayersControl.Overlay;\n\nvar SimpleExample =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SimpleExample, _React$Component);\n\n  function SimpleExample(props) {\n    var _this;\n\n    _classCallCheck(this, SimpleExample);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SimpleExample).call(this, props));\n    _this.state = {\n      station: []\n    };\n    return _this;\n  }\n\n  _createClass(SimpleExample, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8000/api/station/\").then(function (res) {\n        var station = res.data;\n\n        _this2.setState({\n          station: station\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var position = [12.599512, 121.984222];\n      var station = this.state.station;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Map, {\n        center: [12.599512, 121.984222],\n        zoom: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(LayersControl, {\n        position: \"topright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(BaseLayer, {\n        checked: true,\n        name: \"Hyda\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"Tiles courtesy of <a href=\\\"http://openstreetmap.se/\\\" target=\\\"_blank\\\">OpenStreetMap Sweden</a> \\u2014 Map data \\xA9 <a href=\\\"http://www.openstreetmap.org/copyright\\\">OpenStreetMap</a>\",\n        url: \"https://{s}.tile.openstreetmap.se/hydda/full/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(BaseLayer, {\n        name: \"ESRI\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), station.map(function (station, i) {\n        return React.createElement(Overlay, {\n          name: \"Stations\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Marker, {\n          key: i,\n          position: {\n            lat: station.latitude,\n            lng: station.longitude\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Popup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, station.station_name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), \"depth: \", station.station_depth, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        })))));\n      }), React.createElement(Overlay, {\n        checked: true,\n        name: \"Layer group with circles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(LayerGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Circle, {\n        center: position,\n        fillColor: \"blue\",\n        radius: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Circle, {\n        center: position,\n        fillColor: \"red\",\n        radius: 100,\n        stroke: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(LayerGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Circle, {\n        center: [51.51, -0.08],\n        color: \"green\",\n        fillColor: \"green\",\n        radius: 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })))), React.createElement(Overlay, {\n        name: \"Feature group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(FeatureGroup, {\n        color: \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Popup in FeatureGroup\"), React.createElement(Circle, {\n        center: position,\n        radius: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return SimpleExample;\n}(React.Component);\n\nexport { SimpleExample as default };","map":{"version":3,"sources":["/home/pul/hab_ews/frontend/hab_ews/src/leaflet/simple.js"],"names":["React","axios","Circle","FeatureGroup","LayerGroup","LayersControl","Map","Marker","Popup","Rectangle","TileLayer","BaseLayer","Overlay","SimpleExample","props","state","station","get","then","res","data","setState","position","map","i","lat","latitude","lng","longitude","station_name","station_depth","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Circle,\r\n  FeatureGroup,\r\n  LayerGroup,\r\n  LayersControl,\r\n  Map,\r\n  Marker,\r\n  Popup,\r\n  Rectangle,\r\n  TileLayer,\r\n} from 'react-leaflet'\r\n\r\ntype State = {\r\n  lat: number,\r\n  lng: number,\r\n  zoom: number,\r\n}\r\n\r\nconst { BaseLayer, Overlay } = LayersControl\r\n\r\nexport default class SimpleExample extends React.Component<{}, State> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      station: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:8000/api/station/\")\r\n      .then(res => {\r\n        const station = res.data;\r\n        this.setState({ station });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const position = [12.599512, 121.984222];\r\n    const {station} = this.state;\r\n    return (\r\n      <div>\r\n      <Map center={[12.599512, 121.984222]} zoom={6}>\r\n        <LayersControl position=\"topright\">\r\n          <BaseLayer checked name=\"Hyda\">\r\n            <TileLayer\r\n              attribution='Tiles courtesy of <a href=\"http://openstreetmap.se/\" target=\"_blank\">OpenStreetMap Sweden</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n              url=\"https://{s}.tile.openstreetmap.se/hydda/full/{z}/{x}/{y}.png\"\r\n            />\r\n          </BaseLayer>\r\n          <BaseLayer name=\"ESRI\">\r\n            <TileLayer\r\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n            />\r\n          </BaseLayer>\r\n\r\n          \r\n            {station.map((station, i) => {\r\n              return (\r\n                <Overlay name=\"Stations\">\r\n                  <Marker \r\n                    key={i} \r\n                    position={{lat:station.latitude, lng:station.longitude}}>\r\n                    <Popup>\r\n                      <span>\r\n                        {station.station_name}<br />\r\n                        depth: {station.station_depth}<br />\r\n                      </span>\r\n                    </Popup>\r\n                  </Marker>\r\n                </Overlay>\r\n              )\r\n            })}\r\n\r\n          <Overlay checked name=\"Layer group with circles\">\r\n            <LayerGroup>\r\n              <Circle center={position} fillColor=\"blue\" radius={200} />\r\n              <Circle\r\n                center={position}\r\n                fillColor=\"red\"\r\n                radius={100}\r\n                stroke={false}\r\n              />\r\n              <LayerGroup>\r\n                <Circle\r\n                  center={[51.51, -0.08]}\r\n                  color=\"green\"\r\n                  fillColor=\"green\"\r\n                  radius={100}\r\n                />\r\n              </LayerGroup>\r\n            </LayerGroup>\r\n          </Overlay>\r\n          <Overlay name=\"Feature group\">\r\n            <FeatureGroup color=\"purple\">\r\n              <Popup>Popup in FeatureGroup</Popup>\r\n              <Circle center={position} radius={200} />\r\n            </FeatureGroup>\r\n          </Overlay>\r\n        </LayersControl>\r\n      </Map>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}