{"ast":null,"code":"import _slicedToArray from \"/home/pul/Projects/hab-hub/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport identity from \"./identity.js\";\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nfunction nest(values, map, reduce, keys) {\n  return function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new Map();\n    const keyof = keys[i++];\n    let index = -1;\n\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);else groups.set(key, [value]);\n    }\n\n    for (const _ref of groups) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      const key = _ref2[0];\n      const values = _ref2[1];\n      groups.set(key, regroup(values, i));\n    }\n\n    return map(groups);\n  }(values, 0);\n}","map":null,"metadata":{},"sourceType":"module"}