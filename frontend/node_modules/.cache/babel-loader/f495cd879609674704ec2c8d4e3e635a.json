{"ast":null,"code":"var _jsxFileName = \"/home/pul/Projects/hab-hub/frontend/hab_ews/src/leaflet/map_monitoring.js\";\nimport React, { PureComponent } from 'react';\nimport axios from 'axios';\nimport { Button } from \"tabler-react\";\nimport { FeatureGroup, LayerGroup, LayersControl, Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport { popupContent, popupHead, popupText } from \"./popupStyle\";\nimport { redMarker, blueMarker } from \"./mapMarker\";\nimport Timeseries from \"../components/timeseries\";\n/*import PropTypes from 'prop-types';*/\n\nimport Modal from 'react-modal';\n/*  NOTE: When deploying from remote server, always set url to that\r\n *  of remote url so axios will get values from remote and not from localhost.\r\n *  Change value for localhost or development server\r\n */\n//Localhost\n//const URL = 'localhost';\n//Biome Server\n\nconst URL = '10.199.20.25';\nexport default class MapMonitoring extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      center: [12.599512, 121.984222],\n      zoom: 6,\n      advisoryAPI: [],\n      monitoringAPI: [],\n      habHistoryAPI: [],\n      siteHistoryAPI: [],\n      stationName: '',\n      stationID: null,\n      showTimeSeries: '',\n      showModal: false\n    }; // Event Handlers\n\n    this.getStationName = this.getStationName.bind(this);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  getStationName(name, id, timeseries) {\n    this.setState({\n      stationName: name,\n      stationID: id,\n      showTimeSeries: timeseries,\n      showModal: true\n    });\n  }\n\n  handleOpenModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  async componentDidMount() {\n    //Modal Properties\n    Modal.setAppElement('body');\n    Modal.defaultStyles.overlay.backgroundColor = '#212121';\n    Modal.defaultStyles.content.top = '25%';\n    Modal.defaultStyles.content.left = '15%';\n    Modal.defaultStyles.content.right = '15%';\n    Modal.defaultStyles.content.bottom = 'auto';\n    await axios.get('http://' + URL + ':8000/api/station/') // for localhost\n    .then(res => {\n      const advisoryAPI = res.data;\n      this.setState({\n        advisoryAPI\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    await axios.get('http://' + URL + ':8000/api/sensor-latest-data/') // for localhost\n    .then(res => {\n      const monitoringAPI = res.data;\n      this.setState({\n        monitoringAPI\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    await axios.get('http://' + URL + ':8000/api/sensor-latest-data/') // for localhost\n    .then(res => {\n      const habHistoryAPI = res.data;\n      this.setState({\n        habHistoryAPI\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    await axios.get('http://' + URL + ':8000/api/sensor-latest-data/') // for localhost\n    .then(res => {\n      const siteHistoryAPI = res.data;\n      this.setState({\n        siteHistoryAPI\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const advisoryAPI = this.state.advisoryAPI;\n    const monitoringAPI = this.state.monitoringAPI;\n    const habHistoryAPI = this.state.habHistoryAPI;\n    const siteHistoryAPI = this.state.siteHistoryAPI;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.showModal,\n      contentLabel: \"onRequestClose Example\",\n      onRequestClose: this.handleCloseModal,\n      shouldCloseOnOverlayClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Timeseries, {\n      name: this.state.stationName,\n      id: this.state.stationID,\n      timeseries: this.state.showTimeSeries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      onClick: this.handleCloseModal,\n      pill: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(Map, {\n      center: this.state.center,\n      zoom: this.state.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(LayersControl, {\n      collapsed: \"false\",\n      position: \"topright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(LayersControl.BaseLayer, {\n      name: \"ESRI World Imagery\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(LayersControl.BaseLayer, {\n      checked: true,\n      name: \"ESRI World Street Map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"Tiles \\xA9 Esri \\u2014 Source: Esri, DeLorme, NAVTEQ, USGS, Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom, 2012\",\n      url: \"http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(LayersControl.Overlay, {\n      name: \"HAB Advisory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(LayerGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, advisoryAPI.map((e, i) => {\n      return React.createElement(FeatureGroup, {\n        name: e.station_name,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        position: {\n          lat: e.latitude,\n          lng: e.longitude\n        },\n        icon: e.has_hab ? redMarker : blueMarker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: popupContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: popupHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, e.station_name), React.createElement(\"div\", {\n        style: popupText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Location:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, e.longitude, \", \", e.latitude)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Last Updated:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, e.timestamp)))))))));\n    }))), React.createElement(LayersControl.Overlay, {\n      checked: true,\n      name: \"Monitoring Sites\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(LayerGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, monitoringAPI.map((e, i) => {\n      return React.createElement(FeatureGroup, {\n        name: e.name,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        position: {\n          lat: e.latitude,\n          lng: e.longitude\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: popupContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: popupHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, e.name), React.createElement(\"div\", {\n        style: popupText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Location:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, e.longitude, \", \", e.latitude)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Station Depth:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, e.station_depth, \" m\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Last Updated:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, e.date, \"; \", e.time)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Temperature (\\xB0C):\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, e.temp), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          this.getStationName(e.name, e.station_name, 'temp');\n        },\n        title: \"show Temperature timeseries\",\n        className: \"btn btn-outline-dark btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-area-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Salinity (ppt):\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, e.salinity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          this.getStationName(e.name, e.station_name, 'salinity');\n        },\n        title: \"show Salinity timeseries\",\n        className: \"btn btn-outline-dark btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-area-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Turbidity (mg/m3):\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, e.turbidity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          this.getStationName(e.name, e.station_name, 'turbidity');\n        },\n        title: \"show Turbidity timeseries\",\n        className: \"btn btn-outline-dark btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-area-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"pH:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, e.ph), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          this.getStationName(e.name, e.station_name, 'ph');\n        },\n        title: \"show pH timeseries\",\n        className: \"btn btn-outline-dark btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-area-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Dissolved Oxygen (mg/L):\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, e.do), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          this.getStationName(e.name, e.station_name, 'do');\n        },\n        title: \"show Dissolved Oxygen timeseries\",\n        className: \"btn btn-outline-dark btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-area-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Chlorophyll-A (mg/m3):\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, e.chl_a), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          this.getStationName(e.name, e.station_name, 'chl_a');\n        },\n        title: \"show Chlorophyll-A timeseries\",\n        className: \"btn btn-outline-dark btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-area-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Predictive Model Status:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, e.has_hab)))))))));\n    }))), React.createElement(LayersControl.Overlay, {\n      name: \"Historical HAB Events\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(LayerGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, habHistoryAPI.map((e, i) => {\n      return React.createElement(FeatureGroup, {\n        name: e.name,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        position: {\n          lat: e.latitude,\n          lng: e.longitude\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: popupContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: popupHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, e.name), React.createElement(\"div\", {\n        style: popupText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Location:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, e.longitude, \", \", e.latitude)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Station Depth:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, e.station_depth, \" m\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Last Updated:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, e.date, \"; \", e.time)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Temperature:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, e.temp)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Salinity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, e.salinity)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Turbidity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, e.turbidity)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"pH\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, e.ph)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Dissolved Oxygen\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, e.do)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Chlorophyll-a\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, e.chl_a)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Predictive Model Status:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, e.has_hab)))))))));\n    }))), React.createElement(LayersControl.Overlay, {\n      name: \"Historical Site Data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(LayerGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, siteHistoryAPI.map((e, i) => {\n      return React.createElement(FeatureGroup, {\n        name: e.name,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        position: {\n          lat: e.latitude,\n          lng: e.longitude\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: popupContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: popupHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, e.name), React.createElement(\"div\", {\n        style: popupText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Location:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, e.longitude, \", \", e.latitude)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Station Depth:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, e.station_depth, \" m\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \"Last Updated:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, e.date, \"; \", e.time)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"Temperature:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, e.temp)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"Salinity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, e.salinity)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"Turbidity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, e.turbidity)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, \"pH\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, e.ph)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"Dissolved Oxygen\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, e.do)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Chlorophyll-a\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, e.chl_a)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"Predictive Model Status:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, e.has_hab)))))))));\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/home/pul/Projects/hab-hub/frontend/hab_ews/src/leaflet/map_monitoring.js"],"names":["React","PureComponent","axios","Button","FeatureGroup","LayerGroup","LayersControl","Map","Marker","Popup","TileLayer","popupContent","popupHead","popupText","redMarker","blueMarker","Timeseries","Modal","URL","MapMonitoring","constructor","props","state","center","zoom","advisoryAPI","monitoringAPI","habHistoryAPI","siteHistoryAPI","stationName","stationID","showTimeSeries","showModal","getStationName","bind","handleOpenModal","handleCloseModal","name","id","timeseries","setState","componentDidMount","setAppElement","defaultStyles","overlay","backgroundColor","content","top","left","right","bottom","get","then","res","data","catch","error","console","log","render","map","e","i","station_name","lat","latitude","lng","longitude","has_hab","timestamp","station_depth","date","time","temp","salinity","turbidity","ph","do","chl_a"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport axios from 'axios';\r\nimport {Button} from \"tabler-react\";\r\nimport {\r\n  FeatureGroup,\r\n  LayerGroup,\r\n  LayersControl,\r\n  Map,\r\n  Marker,\r\n  Popup,\r\n  TileLayer,\r\n} from 'react-leaflet';\r\nimport { popupContent, popupHead, popupText } from \"./popupStyle\";\r\nimport { redMarker, blueMarker } from \"./mapMarker\";\r\nimport Timeseries from \"../components/timeseries\";\r\n\r\n/*import PropTypes from 'prop-types';*/\r\nimport Modal from 'react-modal';\r\n\r\n/*  NOTE: When deploying from remote server, always set url to that\r\n *  of remote url so axios will get values from remote and not from localhost.\r\n *  Change value for localhost or development server\r\n */\r\n//Localhost\r\n//const URL = 'localhost';\r\n//Biome Server\r\nconst URL = '10.199.20.25';\r\n\r\nexport default class MapMonitoring extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      center: [12.599512, 121.984222],\r\n      zoom: 6,\r\n      advisoryAPI: [],\r\n      monitoringAPI: [],\r\n      habHistoryAPI: [],\r\n      siteHistoryAPI: [],\r\n      stationName: '',\r\n      stationID: null,\r\n      showTimeSeries: '',\r\n      showModal: false,\r\n    };\r\n\r\n    // Event Handlers\r\n    this.getStationName = this.getStationName.bind(this);\r\n    this.handleOpenModal = this.handleOpenModal.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n  }\r\n\r\n  getStationName(name, id, timeseries){\r\n    this.setState(\r\n      {\r\n        stationName: name,\r\n        stationID: id,\r\n        showTimeSeries: timeseries,\r\n        showModal: true,\r\n      }\r\n    );\r\n  }\r\n\r\n  handleOpenModal() {\r\n    this.setState({ showModal: true });\r\n  }\r\n  \r\n  handleCloseModal() {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //Modal Properties\r\n    Modal.setAppElement('body');\r\n    Modal.defaultStyles.overlay.backgroundColor = '#212121';\r\n    Modal.defaultStyles.content.top = '25%';\r\n    Modal.defaultStyles.content.left = '15%';\r\n    Modal.defaultStyles.content.right = '15%';\r\n    Modal.defaultStyles.content.bottom = 'auto';\r\n\r\n    await axios.get('http://'+URL+':8000/api/station/')                       // for localhost\r\n      .then(res => {\r\n        const advisoryAPI = res.data;\r\n        this.setState({ advisoryAPI });\r\n      })\r\n      .catch(function (error) {\r\n      console.log(error);\r\n      })\r\n\r\n    await axios.get('http://'+URL+':8000/api/sensor-latest-data/')            // for localhost\r\n      .then(res => {\r\n        const monitoringAPI = res.data;\r\n        this.setState({ monitoringAPI });\r\n      })\r\n      .catch(function (error) {\r\n      console.log(error);\r\n      })\r\n\r\n    await axios.get('http://'+URL+':8000/api/sensor-latest-data/')            // for localhost\r\n      .then(res => {\r\n        const habHistoryAPI = res.data;\r\n        this.setState({ habHistoryAPI });\r\n      })\r\n      .catch(function (error) {\r\n      console.log(error);\r\n      })\r\n\r\n    await axios.get('http://'+URL+':8000/api/sensor-latest-data/')            // for localhost\r\n      .then(res => {\r\n        const siteHistoryAPI = res.data;\r\n        this.setState({ siteHistoryAPI });\r\n      })\r\n      .catch(function (error) {\r\n      console.log(error);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const {advisoryAPI} = this.state;\r\n    const {monitoringAPI} = this.state;\r\n    const {habHistoryAPI} = this.state;\r\n    const {siteHistoryAPI} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Modal \r\n          isOpen={this.state.showModal}\r\n          contentLabel=\"onRequestClose Example\"\r\n          onRequestClose={this.handleCloseModal}\r\n          shouldCloseOnOverlayClick={true}\r\n          >\r\n          <Timeseries name={this.state.stationName} id={this.state.stationID} timeseries={this.state.showTimeSeries} />\r\n          <div className=\"col text-center\">\r\n            <Button type=\"button\" onClick={this.handleCloseModal} pill color=\"primary\">Close</Button>\r\n          </div>\r\n        </Modal>\r\n        <Map center={this.state.center} zoom={this.state.zoom}>\r\n          <LayersControl collapsed=\"false\" position=\"topright\">\r\n            <LayersControl.BaseLayer name=\"ESRI World Imagery\">\r\n              <TileLayer\r\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer checked name=\"ESRI World Street Map\">\r\n              <TileLayer\r\n                attribution='Tiles &copy; Esri &mdash; Source: Esri, DeLorme, NAVTEQ, USGS, Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom, 2012'\r\n                url=\"http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.Overlay name=\"HAB Advisory\">\r\n              <LayerGroup>\r\n                {advisoryAPI.map((e, i) => {\r\n                  return( \r\n                    <FeatureGroup name={e.station_name} key={i}>\r\n                      <Marker \r\n                        position={{lat:e.latitude, lng:e.longitude}}\r\n                        icon={e.has_hab ? redMarker : blueMarker}>\r\n                        <Popup>\r\n                          <div style={popupContent}>\r\n                            <div style={popupHead}>\r\n                              {e.station_name}\r\n                            </div>\r\n                            <div style={popupText}>\r\n                            <table>\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td>Location:</td>\r\n                                  <td>{e.longitude}, {e.latitude}</td> \r\n                                </tr>\r\n                                <tr>\r\n                                  <td>Last Updated:</td>\r\n                                  <td>{e.timestamp}</td> \r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                            </div>\r\n                          </div>\r\n                        </Popup>\r\n                      </Marker>\r\n                    </FeatureGroup>\r\n                  )\r\n                })}\r\n              </LayerGroup>\r\n            </LayersControl.Overlay>\r\n            <LayersControl.Overlay checked name=\"Monitoring Sites\">\r\n              <LayerGroup>\r\n                {monitoringAPI.map((e, i) => {\r\n                  return ( \r\n                    <FeatureGroup name={e.name} key={i}>\r\n                        <Marker \r\n                          position={{lat:e.latitude, lng:e.longitude}}>\r\n                          <Popup>\r\n                            <div style={popupContent}>\r\n                              <div style={popupHead}>\r\n                                {e.name}\r\n                              </div>\r\n                              <div style={popupText}>\r\n                              <table>\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td>Location:</td>\r\n                                    <td>{e.longitude}, {e.latitude}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Station Depth:</td>\r\n                                    <td>{e.station_depth} m</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Last Updated:</td>\r\n                                    <td>{e.date}; {e.time}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td></td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Temperature (°C):</td>\r\n                                    <td>{e.temp}</td>\r\n                                    <td>\r\n                                      <button type=\"button\" onClick={() => {this.getStationName(e.name, e.station_name, 'temp')}}\r\n                                      title=\"show Temperature timeseries\" className=\"btn btn-outline-dark btn-sm\"><i className=\"fa fa-area-chart\"></i></button>\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                   <td>Salinity (ppt):</td>\r\n                                    <td>{e.salinity}</td> \r\n                                    <td>\r\n                                      <button type=\"button\" onClick={() => {this.getStationName(e.name, e.station_name, 'salinity')}}\r\n                                      title=\"show Salinity timeseries\" className=\"btn btn-outline-dark btn-sm\"><i className=\"fa fa-area-chart\"></i></button>\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Turbidity (mg/m3):</td>\r\n                                    <td>{e.turbidity}</td> \r\n                                    <td>\r\n                                      <button type=\"button\" onClick={() => {this.getStationName(e.name, e.station_name, 'turbidity')}}\r\n                                      title=\"show Turbidity timeseries\" className=\"btn btn-outline-dark btn-sm\"><i className=\"fa fa-area-chart\"></i></button>\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>pH:</td>\r\n                                    <td>{e.ph}</td> \r\n                                    <td>\r\n                                      <button type=\"button\" onClick={() => {this.getStationName(e.name, e.station_name, 'ph')}}\r\n                                      title=\"show pH timeseries\" className=\"btn btn-outline-dark btn-sm\"><i className=\"fa fa-area-chart\"></i></button>      \r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Dissolved Oxygen (mg/L):</td>\r\n                                    <td>{e.do}</td> \r\n                                    <td>\r\n                                      <button type=\"button\" onClick={() => {this.getStationName(e.name, e.station_name, 'do')}}\r\n                                      title=\"show Dissolved Oxygen timeseries\" className=\"btn btn-outline-dark btn-sm\"><i className=\"fa fa-area-chart\"></i></button>\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Chlorophyll-A (mg/m3):</td>\r\n                                    <td>{e.chl_a}</td> \r\n                                    <td>\r\n                                      <button type=\"button\" onClick={() => {this.getStationName(e.name, e.station_name, 'chl_a')}}\r\n                                      title=\"show Chlorophyll-A timeseries\" className=\"btn btn-outline-dark btn-sm\"><i className=\"fa fa-area-chart\"></i></button>\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td></td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Predictive Model Status:</td>\r\n                                    <td>{e.has_hab}</td> \r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              </div>\r\n                            </div>\r\n                          </Popup>\r\n                        </Marker>\r\n                    </FeatureGroup>\r\n                  )\r\n                })}\r\n              </LayerGroup>\r\n            </LayersControl.Overlay>\r\n            <LayersControl.Overlay name=\"Historical HAB Events\">\r\n              <LayerGroup>\r\n                {habHistoryAPI.map((e, i) => {\r\n                  return ( \r\n                    <FeatureGroup name={e.name} key={i}>\r\n                        <Marker \r\n                          position={{lat:e.latitude, lng:e.longitude}}>\r\n                          <Popup>\r\n                            <div style={popupContent}>\r\n                              <div style={popupHead}>\r\n                                {e.name}\r\n                              </div>\r\n                              <div style={popupText}>\r\n                              <table>\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td>Location:</td>\r\n                                    <td>{e.longitude}, {e.latitude}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Station Depth:</td>\r\n                                    <td>{e.station_depth} m</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Last Updated:</td>\r\n                                    <td>{e.date}; {e.time}</td> \r\n                                  </tr>\r\n                                  <br />\r\n                                  <tr>\r\n                                    <td>Temperature:</td>\r\n                                    <td>{e.temp}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Salinity</td>\r\n                                    <td>{e.salinity}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Turbidity</td>\r\n                                    <td>{e.turbidity}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>pH</td>\r\n                                    <td>{e.ph}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Dissolved Oxygen</td>\r\n                                    <td>{e.do}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Chlorophyll-a</td>\r\n                                    <td>{e.chl_a}</td> \r\n                                  </tr>\r\n                                  <br />\r\n                                  <tr>\r\n                                    <td>Predictive Model Status:</td>\r\n                                    <td>{e.has_hab}</td> \r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              </div>\r\n                            </div>\r\n                          </Popup>\r\n                        </Marker>\r\n                    </FeatureGroup>\r\n                   )\r\n                })}\r\n              </LayerGroup>\r\n            </LayersControl.Overlay>\r\n            <LayersControl.Overlay name=\"Historical Site Data\">\r\n              <LayerGroup>\r\n                {siteHistoryAPI.map((e, i) => {\r\n                  return ( \r\n                    <FeatureGroup name={e.name} key={i} >\r\n                        <Marker \r\n                          position={{lat:e.latitude, lng:e.longitude}}>\r\n                          <Popup>\r\n                            <div style={popupContent}>\r\n                              <div style={popupHead}>\r\n                                {e.name}\r\n                              </div>\r\n                              <div style={popupText}>\r\n                              <table>\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td>Location:</td>\r\n                                    <td>{e.longitude}, {e.latitude}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Station Depth:</td>\r\n                                    <td>{e.station_depth} m</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Last Updated:</td>\r\n                                    <td>{e.date}; {e.time}</td> \r\n                                  </tr>\r\n                                  <br />\r\n                                  <tr>\r\n                                    <td>Temperature:</td>\r\n                                    <td>{e.temp}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Salinity</td>\r\n                                    <td>{e.salinity}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Turbidity</td>\r\n                                    <td>{e.turbidity}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>pH</td>\r\n                                    <td>{e.ph}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Dissolved Oxygen</td>\r\n                                    <td>{e.do}</td> \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>Chlorophyll-a</td>\r\n                                    <td>{e.chl_a}</td> \r\n                                  </tr>\r\n                                  <br />\r\n                                  <tr>\r\n                                    <td>Predictive Model Status:</td>\r\n                                    <td>{e.has_hab}</td> \r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              </div>\r\n                            </div>\r\n                          </Popup>\r\n                        </Marker>\r\n                    </FeatureGroup>\r\n                  )\r\n                })}\r\n              </LayerGroup>\r\n            </LayersControl.Overlay>\r\n          </LayersControl>\r\n        </Map>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}