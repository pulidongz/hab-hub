{"ast":null,"code":"/*\n Highcharts JS v7.2.0 (2019-09-03)\n\n Exporting module\n\n (c) 2010-2019 Torstein Honsi\n\n License: www.highcharts.com/license\n*/\n(function (c) {\n  \"object\" === typeof module && module.exports ? (c[\"default\"] = c, module.exports = c) : \"function\" === typeof define && define.amd ? define(\"highcharts/modules/exporting\", [\"highcharts\"], function (k) {\n    c(k);\n    c.Highcharts = k;\n    return c;\n  }) : c(\"undefined\" !== typeof Highcharts ? Highcharts : void 0);\n})(function (c) {\n  function k(e, t, c, k) {\n    e.hasOwnProperty(t) || (e[t] = k.apply(null, c));\n  }\n\n  c = c ? c._modules : {};\n  k(c, \"modules/full-screen.src.js\", [c[\"parts/Globals.js\"]], function (e) {\n    (e.FullScreen = function (e) {\n      this.init(e.parentNode);\n    }).prototype = {\n      init: function (e) {\n        var c;\n        e.requestFullscreen ? c = e.requestFullscreen() : e.mozRequestFullScreen ? c = e.mozRequestFullScreen() : e.webkitRequestFullscreen ? c = e.webkitRequestFullscreen() : e.msRequestFullscreen && (c = e.msRequestFullscreen());\n        if (c) c[\"catch\"](function () {\n          alert(\"Full screen is not supported inside a frame\");\n        });\n      }\n    };\n  });\n  k(c, \"mixins/navigation.js\", [], function () {\n    return {\n      initUpdate: function (e) {\n        e.navigation || (e.navigation = {\n          updates: [],\n          update: function (e, c) {\n            this.updates.forEach(function (t) {\n              t.update.call(t.context, e, c);\n            });\n          }\n        });\n      },\n      addUpdate: function (e, c) {\n        c.navigation || this.initUpdate(c);\n        c.navigation.updates.push({\n          update: e,\n          context: c\n        });\n      }\n    };\n  });\n  k(c, \"modules/exporting.src.js\", [c[\"parts/Globals.js\"], c[\"parts/Utilities.js\"], c[\"mixins/navigation.js\"]], function (e, c, k) {\n    var t = c.isObject,\n        E = c.objectEach;\n    c = e.defaultOptions;\n    var A = e.doc,\n        C = e.Chart,\n        y = e.addEvent,\n        J = e.removeEvent,\n        D = e.fireEvent,\n        w = e.createElement,\n        F = e.discardElement,\n        u = e.css,\n        p = e.merge,\n        q = e.pick,\n        x = e.extend,\n        K = e.isTouchDevice,\n        z = e.win,\n        H = z.navigator.userAgent,\n        G = e.SVGRenderer,\n        I = e.Renderer.prototype.symbols,\n        L = /Edge\\/|Trident\\/|MSIE /.test(H),\n        M = /firefox/i.test(H);\n    x(c.lang, {\n      viewFullscreen: \"View in full screen\",\n      printChart: \"Print chart\",\n      downloadPNG: \"Download PNG image\",\n      downloadJPEG: \"Download JPEG image\",\n      downloadPDF: \"Download PDF document\",\n      downloadSVG: \"Download SVG vector image\",\n      contextButtonTitle: \"Chart context menu\"\n    });\n    c.navigation || (c.navigation = {});\n    p(!0, c.navigation, {\n      buttonOptions: {\n        theme: {},\n        symbolSize: 14,\n        symbolX: 12.5,\n        symbolY: 10.5,\n        align: \"right\",\n        buttonSpacing: 3,\n        height: 22,\n        verticalAlign: \"top\",\n        width: 24\n      }\n    });\n    p(!0, c.navigation, {\n      menuStyle: {\n        border: \"1px solid #999999\",\n        background: \"#ffffff\",\n        padding: \"5px 0\"\n      },\n      menuItemStyle: {\n        padding: \"0.5em 1em\",\n        color: \"#333333\",\n        background: \"none\",\n        fontSize: K ? \"14px\" : \"11px\",\n        transition: \"background 250ms, color 250ms\"\n      },\n      menuItemHoverStyle: {\n        background: \"#335cad\",\n        color: \"#ffffff\"\n      },\n      buttonOptions: {\n        symbolFill: \"#666666\",\n        symbolStroke: \"#666666\",\n        symbolStrokeWidth: 3,\n        theme: {\n          padding: 5\n        }\n      }\n    });\n    c.exporting = {\n      type: \"image/png\",\n      url: \"https://export.highcharts.com/\",\n      printMaxWidth: 780,\n      scale: 2,\n      buttons: {\n        contextButton: {\n          className: \"highcharts-contextbutton\",\n          menuClassName: \"highcharts-contextmenu\",\n          symbol: \"menu\",\n          titleKey: \"contextButtonTitle\",\n          menuItems: \"viewFullscreen printChart separator downloadPNG downloadJPEG downloadPDF downloadSVG\".split(\" \")\n        }\n      },\n      menuItemDefinitions: {\n        viewFullscreen: {\n          textKey: \"viewFullscreen\",\n          onclick: function () {\n            this.fullscreen = new e.FullScreen(this.container);\n          }\n        },\n        printChart: {\n          textKey: \"printChart\",\n          onclick: function () {\n            this.print();\n          }\n        },\n        separator: {\n          separator: !0\n        },\n        downloadPNG: {\n          textKey: \"downloadPNG\",\n          onclick: function () {\n            this.exportChart();\n          }\n        },\n        downloadJPEG: {\n          textKey: \"downloadJPEG\",\n          onclick: function () {\n            this.exportChart({\n              type: \"image/jpeg\"\n            });\n          }\n        },\n        downloadPDF: {\n          textKey: \"downloadPDF\",\n          onclick: function () {\n            this.exportChart({\n              type: \"application/pdf\"\n            });\n          }\n        },\n        downloadSVG: {\n          textKey: \"downloadSVG\",\n          onclick: function () {\n            this.exportChart({\n              type: \"image/svg+xml\"\n            });\n          }\n        }\n      }\n    };\n\n    e.post = function (a, b, f) {\n      var d = w(\"form\", p({\n        method: \"post\",\n        action: a,\n        enctype: \"multipart/form-data\"\n      }, f), {\n        display: \"none\"\n      }, A.body);\n      E(b, function (b, a) {\n        w(\"input\", {\n          type: \"hidden\",\n          name: a,\n          value: b\n        }, null, d);\n      });\n      d.submit();\n      F(d);\n    };\n\n    x(C.prototype, {\n      sanitizeSVG: function (a, b) {\n        var f = a.indexOf(\"</svg>\") + 6,\n            d = a.substr(f);\n        a = a.substr(0, f);\n        b && b.exporting && b.exporting.allowHTML && d && (d = '<foreignObject x=\"0\" y=\"0\" width=\"' + b.chart.width + '\" height=\"' + b.chart.height + '\"><body xmlns=\"http://www.w3.org/1999/xhtml\">' + d + \"</body></foreignObject>\", a = a.replace(\"</svg>\", d + \"</svg>\"));\n        a = a.replace(/zIndex=\"[^\"]+\"/g, \"\").replace(/symbolName=\"[^\"]+\"/g, \"\").replace(/jQuery[0-9]+=\"[^\"]+\"/g, \"\").replace(/url\\((\"|&quot;)(.*?)(\"|&quot;);?\\)/g, \"url($2)\").replace(/url\\([^#]+#/g, \"url(#\").replace(/<svg /, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" ').replace(/ (|NS[0-9]+:)href=/g, \" xlink:href=\").replace(/\\n/, \" \").replace(/(fill|stroke)=\"rgba\\(([ 0-9]+,[ 0-9]+,[ 0-9]+),([ 0-9\\.]+)\\)\"/g, '$1=\"rgb($2)\" $1-opacity=\"$3\"').replace(/&nbsp;/g, \"\\u00a0\").replace(/&shy;/g, \"\\u00ad\");\n        this.ieSanitizeSVG && (a = this.ieSanitizeSVG(a));\n        return a;\n      },\n      getChartHTML: function () {\n        this.styledMode && this.inlineStyles();\n        return this.container.innerHTML;\n      },\n      getSVG: function (a) {\n        var b,\n            f = p(this.options, a);\n        f.plotOptions = p(this.userOptions.plotOptions, a && a.plotOptions);\n        var d = w(\"div\", null, {\n          position: \"absolute\",\n          top: \"-9999em\",\n          width: this.chartWidth + \"px\",\n          height: this.chartHeight + \"px\"\n        }, A.body);\n        var c = this.renderTo.style.width;\n        var r = this.renderTo.style.height;\n        c = f.exporting.sourceWidth || f.chart.width || /px$/.test(c) && parseInt(c, 10) || (f.isGantt ? 800 : 600);\n        r = f.exporting.sourceHeight || f.chart.height || /px$/.test(r) && parseInt(r, 10) || 400;\n        x(f.chart, {\n          animation: !1,\n          renderTo: d,\n          forExport: !0,\n          renderer: \"SVGRenderer\",\n          width: c,\n          height: r\n        });\n        f.exporting.enabled = !1;\n        delete f.data;\n        f.series = [];\n        this.series.forEach(function (a) {\n          b = p(a.userOptions, {\n            animation: !1,\n            enableMouseTracking: !1,\n            showCheckbox: !1,\n            visible: a.visible\n          });\n          b.isInternal || f.series.push(b);\n        });\n        this.axes.forEach(function (b) {\n          b.userOptions.internalKey || (b.userOptions.internalKey = e.uniqueKey());\n        });\n        var l = new e.Chart(f, this.callback);\n        a && [\"xAxis\", \"yAxis\", \"series\"].forEach(function (b) {\n          var d = {};\n          a[b] && (d[b] = a[b], l.update(d));\n        });\n        this.axes.forEach(function (b) {\n          var a = e.find(l.axes, function (a) {\n            return a.options.internalKey === b.userOptions.internalKey;\n          }),\n              d = b.getExtremes(),\n              f = d.userMin;\n          d = d.userMax;\n          a && (void 0 !== f && f !== a.min || void 0 !== d && d !== a.max) && a.setExtremes(f, d, !0, !1);\n        });\n        c = l.getChartHTML();\n        D(this, \"getSVG\", {\n          chartCopy: l\n        });\n        c = this.sanitizeSVG(c, f);\n        f = null;\n        l.destroy();\n        F(d);\n        return c;\n      },\n      getSVGForExport: function (a, b) {\n        var f = this.options.exporting;\n        return this.getSVG(p({\n          chart: {\n            borderRadius: 0\n          }\n        }, f.chartOptions, b, {\n          exporting: {\n            sourceWidth: a && a.sourceWidth || f.sourceWidth,\n            sourceHeight: a && a.sourceHeight || f.sourceHeight\n          }\n        }));\n      },\n      getFilename: function () {\n        var a = this.userOptions.title && this.userOptions.title.text,\n            b = this.options.exporting.filename;\n        if (b) return b;\n        \"string\" === typeof a && (b = a.toLowerCase().replace(/<\\/?[^>]+(>|$)/g, \"\").replace(/[\\s_]+/g, \"-\").replace(/[^a-z0-9\\-]/g, \"\").replace(/^[\\-]+/g, \"\").replace(/[\\-]+/g, \"-\").substr(0, 24).replace(/[\\-]+$/g, \"\"));\n        if (!b || 5 > b.length) b = \"chart\";\n        return b;\n      },\n      exportChart: function (a, b) {\n        b = this.getSVGForExport(a, b);\n        a = p(this.options.exporting, a);\n        e.post(a.url, {\n          filename: a.filename || this.getFilename(),\n          type: a.type,\n          width: a.width || 0,\n          scale: a.scale,\n          svg: b\n        }, a.formAttributes);\n      },\n      print: function () {\n        function a(a) {\n          (b.fixedDiv ? [b.fixedDiv, b.scrollingContainer] : [b.container]).forEach(function (b) {\n            a.appendChild(b);\n          });\n        }\n\n        var b = this,\n            f = [],\n            d = A.body,\n            c = d.childNodes,\n            e = b.options.exporting.printMaxWidth,\n            l;\n\n        if (!b.isPrinting) {\n          b.isPrinting = !0;\n          b.pointer.reset(null, 0);\n          D(b, \"beforePrint\");\n\n          if (l = e && b.chartWidth > e) {\n            var g = [b.options.chart.width, void 0, !1];\n            b.setSize(e, void 0, !1);\n          }\n\n          [].forEach.call(c, function (b, a) {\n            1 === b.nodeType && (f[a] = b.style.display, b.style.display = \"none\");\n          });\n          a(d);\n          setTimeout(function () {\n            z.focus();\n            z.print();\n            setTimeout(function () {\n              a(b.renderTo);\n              [].forEach.call(c, function (b, a) {\n                1 === b.nodeType && (b.style.display = f[a]);\n              });\n              b.isPrinting = !1;\n              l && b.setSize.apply(b, g);\n              D(b, \"afterPrint\");\n            }, 1E3);\n          }, 1);\n        }\n      },\n      contextMenu: function (a, b, f, d, c, r, l) {\n        var g = this,\n            m = g.options.navigation,\n            p = g.chartWidth,\n            B = g.chartHeight,\n            n = \"cache-\" + a,\n            h = g[n],\n            v = Math.max(c, r);\n\n        if (!h) {\n          g.exportContextMenu = g[n] = h = w(\"div\", {\n            className: a\n          }, {\n            position: \"absolute\",\n            zIndex: 1E3,\n            padding: v + \"px\",\n            pointerEvents: \"auto\"\n          }, g.fixedDiv || g.container);\n          var k = w(\"div\", {\n            className: \"highcharts-menu\"\n          }, null, h);\n          g.styledMode || u(k, x({\n            MozBoxShadow: \"3px 3px 10px #888\",\n            WebkitBoxShadow: \"3px 3px 10px #888\",\n            boxShadow: \"3px 3px 10px #888\"\n          }, m.menuStyle));\n\n          h.hideMenu = function () {\n            u(h, {\n              display: \"none\"\n            });\n            l && l.setState(0);\n            g.openMenu = !1;\n            u(g.renderTo, {\n              overflow: \"hidden\"\n            });\n            e.clearTimeout(h.hideTimer);\n            D(g, \"exportMenuHidden\");\n          };\n\n          g.exportEvents.push(y(h, \"mouseleave\", function () {\n            h.hideTimer = z.setTimeout(h.hideMenu, 500);\n          }), y(h, \"mouseenter\", function () {\n            e.clearTimeout(h.hideTimer);\n          }), y(A, \"mouseup\", function (b) {\n            g.pointer.inClass(b.target, a) || h.hideMenu();\n          }), y(h, \"click\", function () {\n            g.openMenu && h.hideMenu();\n          }));\n          b.forEach(function (b) {\n            \"string\" === typeof b && (b = g.options.exporting.menuItemDefinitions[b]);\n\n            if (t(b, !0)) {\n              if (b.separator) var a = w(\"hr\", null, null, k);else a = w(\"div\", {\n                className: \"highcharts-menu-item\",\n                onclick: function (a) {\n                  a && a.stopPropagation();\n                  h.hideMenu();\n                  b.onclick && b.onclick.apply(g, arguments);\n                },\n                innerHTML: b.text || g.options.lang[b.textKey]\n              }, null, k), g.styledMode || (a.onmouseover = function () {\n                u(this, m.menuItemHoverStyle);\n              }, a.onmouseout = function () {\n                u(this, m.menuItemStyle);\n              }, u(a, x({\n                cursor: \"pointer\"\n              }, m.menuItemStyle)));\n              g.exportDivElements.push(a);\n            }\n          });\n          g.exportDivElements.push(k, h);\n          g.exportMenuWidth = h.offsetWidth;\n          g.exportMenuHeight = h.offsetHeight;\n        }\n\n        b = {\n          display: \"block\"\n        };\n        f + g.exportMenuWidth > p ? b.right = p - f - c - v + \"px\" : b.left = f - v + \"px\";\n        d + r + g.exportMenuHeight > B && \"top\" !== l.alignOptions.verticalAlign ? b.bottom = B - d - v + \"px\" : b.top = d + r - v + \"px\";\n        u(h, b);\n        u(g.renderTo, {\n          overflow: \"\"\n        });\n        g.openMenu = !0;\n      },\n      addButton: function (a) {\n        var b = this,\n            f = b.renderer,\n            d = p(b.options.navigation.buttonOptions, a),\n            c = d.onclick,\n            e = d.menuItems,\n            l = d.symbolSize || 12;\n        b.btnCount || (b.btnCount = 0);\n        b.exportDivElements || (b.exportDivElements = [], b.exportSVGElements = []);\n\n        if (!1 !== d.enabled) {\n          var g = d.theme,\n              m = g.states,\n              k = m && m.hover;\n          m = m && m.select;\n          var B;\n          b.styledMode || (g.fill = q(g.fill, \"#ffffff\"), g.stroke = q(g.stroke, \"none\"));\n          delete g.states;\n          c ? B = function (a) {\n            a && a.stopPropagation();\n            c.call(b, a);\n          } : e && (B = function (a) {\n            a && a.stopPropagation();\n            b.contextMenu(n.menuClassName, e, n.translateX, n.translateY, n.width, n.height, n);\n            n.setState(2);\n          });\n          d.text && d.symbol ? g.paddingLeft = q(g.paddingLeft, 25) : d.text || x(g, {\n            width: d.width,\n            height: d.height,\n            padding: 0\n          });\n          b.styledMode || (g[\"stroke-linecap\"] = \"round\", g.fill = q(g.fill, \"#ffffff\"), g.stroke = q(g.stroke, \"none\"));\n          var n = f.button(d.text, 0, 0, B, g, k, m).addClass(a.className).attr({\n            title: q(b.options.lang[d._titleKey || d.titleKey], \"\")\n          });\n          n.menuClassName = a.menuClassName || \"highcharts-menu-\" + b.btnCount++;\n\n          if (d.symbol) {\n            var h = f.symbol(d.symbol, d.symbolX - l / 2, d.symbolY - l / 2, l, l, {\n              width: l,\n              height: l\n            }).addClass(\"highcharts-button-symbol\").attr({\n              zIndex: 1\n            }).add(n);\n            b.styledMode || h.attr({\n              stroke: d.symbolStroke,\n              fill: d.symbolFill,\n              \"stroke-width\": d.symbolStrokeWidth || 1\n            });\n          }\n\n          n.add(b.exportingGroup).align(x(d, {\n            width: n.width,\n            x: q(d.x, b.buttonOffset)\n          }), !0, \"spacingBox\");\n          b.buttonOffset += (n.width + d.buttonSpacing) * (\"right\" === d.align ? -1 : 1);\n          b.exportSVGElements.push(n, h);\n        }\n      },\n      destroyExport: function (a) {\n        var b = a ? a.target : this;\n        a = b.exportSVGElements;\n        var f = b.exportDivElements,\n            d = b.exportEvents,\n            c;\n        a && (a.forEach(function (a, d) {\n          a && (a.onclick = a.ontouchstart = null, c = \"cache-\" + a.menuClassName, b[c] && delete b[c], b.exportSVGElements[d] = a.destroy());\n        }), a.length = 0);\n        b.exportingGroup && (b.exportingGroup.destroy(), delete b.exportingGroup);\n        f && (f.forEach(function (a, d) {\n          e.clearTimeout(a.hideTimer);\n          J(a, \"mouseleave\");\n          b.exportDivElements[d] = a.onmouseout = a.onmouseover = a.ontouchstart = a.onclick = null;\n          F(a);\n        }), f.length = 0);\n        d && (d.forEach(function (a) {\n          a();\n        }), d.length = 0);\n      }\n    });\n    G.prototype.inlineToAttributes = \"fill stroke strokeLinecap strokeLinejoin strokeWidth textAnchor x y\".split(\" \");\n    G.prototype.inlineBlacklist = [/-/, /^(clipPath|cssText|d|height|width)$/, /^font$/, /[lL]ogical(Width|Height)$/, /perspective/, /TapHighlightColor/, /^transition/, /^length$/];\n    G.prototype.unstyledElements = [\"clipPath\", \"defs\", \"desc\"];\n\n    C.prototype.inlineStyles = function () {\n      function a(a) {\n        return a.replace(/([A-Z])/g, function (a, b) {\n          return \"-\" + b.toLowerCase();\n        });\n      }\n\n      function b(c) {\n        function f(b, f) {\n          v = u = !1;\n\n          if (k) {\n            for (r = k.length; r-- && !u;) u = k[r].test(f);\n\n            v = !u;\n          }\n\n          \"transform\" === f && \"none\" === b && (v = !0);\n\n          for (r = e.length; r-- && !v;) v = e[r].test(f) || \"function\" === typeof b;\n\n          v || y[f] === b && \"svg\" !== c.nodeName || g[c.nodeName][f] === b || (-1 !== d.indexOf(f) ? c.setAttribute(a(f), b) : h += a(f) + \":\" + b + \";\");\n        }\n\n        var h = \"\",\n            v,\n            u,\n            r;\n\n        if (1 === c.nodeType && -1 === l.indexOf(c.nodeName)) {\n          var t = z.getComputedStyle(c, null);\n          var y = \"svg\" === c.nodeName ? {} : z.getComputedStyle(c.parentNode, null);\n\n          if (!g[c.nodeName]) {\n            m = q.getElementsByTagName(\"svg\")[0];\n            var w = q.createElementNS(c.namespaceURI, c.nodeName);\n            m.appendChild(w);\n            g[c.nodeName] = p(z.getComputedStyle(w, null));\n            \"text\" === c.nodeName && delete g.text.fill;\n            m.removeChild(w);\n          }\n\n          if (M || L) for (var x in t) f(t[x], x);else E(t, f);\n          h && (t = c.getAttribute(\"style\"), c.setAttribute(\"style\", (t ? t + \";\" : \"\") + h));\n          \"svg\" === c.nodeName && c.setAttribute(\"stroke-width\", \"1px\");\n          \"text\" !== c.nodeName && [].forEach.call(c.children || c.childNodes, b);\n        }\n      }\n\n      var c = this.renderer,\n          d = c.inlineToAttributes,\n          e = c.inlineBlacklist,\n          k = c.inlineWhitelist,\n          l = c.unstyledElements,\n          g = {},\n          m;\n      c = A.createElement(\"iframe\");\n      u(c, {\n        width: \"1px\",\n        height: \"1px\",\n        visibility: \"hidden\"\n      });\n      A.body.appendChild(c);\n      var q = c.contentWindow.document;\n      q.open();\n      q.write('<svg xmlns=\"http://www.w3.org/2000/svg\"></svg>');\n      q.close();\n      b(this.container.querySelector(\"svg\"));\n      m.parentNode.removeChild(m);\n    };\n\n    I.menu = function (a, b, c, d) {\n      return [\"M\", a, b + 2.5, \"L\", a + c, b + 2.5, \"M\", a, b + d / 2 + .5, \"L\", a + c, b + d / 2 + .5, \"M\", a, b + d - 1.5, \"L\", a + c, b + d - 1.5];\n    };\n\n    I.menuball = function (a, b, c, d) {\n      a = [];\n      d = d / 3 - 2;\n      return a = a.concat(this.circle(c - d, b, d, d), this.circle(c - d, b + d + 4, d, d), this.circle(c - d, b + 2 * (d + 4), d, d));\n    };\n\n    C.prototype.renderExporting = function () {\n      var a = this,\n          b = a.options.exporting,\n          c = b.buttons,\n          d = a.isDirtyExporting || !a.exportSVGElements;\n      a.buttonOffset = 0;\n      a.isDirtyExporting && a.destroyExport();\n      d && !1 !== b.enabled && (a.exportEvents = [], a.exportingGroup = a.exportingGroup || a.renderer.g(\"exporting-group\").attr({\n        zIndex: 3\n      }).add(), E(c, function (b) {\n        a.addButton(b);\n      }), a.isDirtyExporting = !1);\n      y(a, \"destroy\", a.destroyExport);\n    };\n\n    y(C, \"init\", function () {\n      var a = this;\n      a.exporting = {\n        update: function (b, c) {\n          a.isDirtyExporting = !0;\n          p(!0, a.options.exporting, b);\n          q(c, !0) && a.redraw();\n        }\n      };\n      k.addUpdate(function (b, c) {\n        a.isDirtyExporting = !0;\n        p(!0, a.options.navigation, b);\n        q(c, !0) && a.redraw();\n      }, a);\n    });\n    C.prototype.callbacks.push(function (a) {\n      a.renderExporting();\n      y(a, \"redraw\", a.renderExporting);\n    });\n  });\n  k(c, \"masters/modules/exporting.src.js\", [], function () {});\n});","map":null,"metadata":{},"sourceType":"script"}