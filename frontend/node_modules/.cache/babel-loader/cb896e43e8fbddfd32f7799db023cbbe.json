{"ast":null,"code":"var _jsxFileName = \"/home/pul/Projects/hab-hub/frontend/src/SiteMonitoringPage.react.js\";\nimport React, { PureComponent } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport CsvDownloader from 'react-csv-downloader';\nimport Leaflet from 'leaflet';\nimport { Page, Grid, Container, Form, Card, Button } from \"tabler-react\";\nimport MapMonitoring from \"./leaflet/map_monitoring\";\nimport SiteWrapper from \"./SiteWrapper.react\";\nLeaflet.Icon.Default.imagePath = '//cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.4/images/';\n/*  NOTE: When deploying from remote server, always set url to that\n *  of remote url so axios will get values from remote and not from localhost.\n *  Change value for localhost or development server\n */\n//Localhost\n\nconst URL = 'localhost'; //Biome Server\n//const URL = '10.199.20.25';\n\nexport default class SiteMonitoringPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.toggleMonitoringSite = e => {\n      this.setState({\n        monitoring_site: e.target.value,\n        goDownload: true\n      });\n    };\n\n    this.toggleTemp = () => {\n      this.setState({\n        temp: !this.state.temp\n      });\n\n      if (this.state.temp === false) {\n        this.setState({\n          goDownload: true\n        });\n      }\n    };\n\n    this.toggleSalinity = () => {\n      this.setState({\n        salinity: !this.state.salinity\n      });\n\n      if (this.state.salinity === false) {\n        this.setState({\n          goDownload: true\n        });\n      }\n    };\n\n    this.toggleTurbidity = () => {\n      this.setState({\n        turbidity: !this.state.turbidity\n      });\n\n      if (this.state.turbidity === false) {\n        this.setState({\n          goDownload: true\n        });\n      }\n    };\n\n    this.togglePH = () => {\n      this.setState({\n        ph: !this.state.ph\n      });\n\n      if (this.state.ph === false) {\n        this.setState({\n          goDownload: true\n        });\n      }\n    };\n\n    this.toggleDO = () => {\n      this.setState({\n        do: !this.state.do\n      });\n\n      if (this.state.do === false) {\n        this.setState({\n          goDownload: true\n        });\n      }\n    };\n\n    this.toggleChlA = () => {\n      this.setState({\n        chl_a: !this.state.chl_a\n      });\n\n      if (this.state.chl_a === false) {\n        this.setState({\n          goDownload: true\n        });\n      }\n    };\n\n    this.toggleToxicity = () => {\n      this.setState({\n        toxicity: !this.state.toxicity\n      });\n\n      if (this.state.toxicity === false) {\n        this.setState({\n          goDownload: true\n        });\n      }\n    };\n\n    this.toggleSpeciesList = () => {\n      this.setState({\n        speciesList: !this.state.speciesList\n      });\n\n      if (this.state.speciesList === false) {\n        this.setState({\n          goDownload: true\n        });\n      }\n    };\n\n    this.togglePMR = () => {\n      this.setState({\n        pmr: !this.state.pmr\n      });\n\n      if (this.state.pmr === false) {\n        this.setState({\n          goDownload: true\n        });\n      }\n    };\n\n    this.state = {\n      exportData: [],\n      dataToCsv: [],\n      monitoring_site: 'all_monitoring_sites',\n      temp: false,\n      salinity: false,\n      turbidity: false,\n      ph: false,\n      do: false,\n      chl_a: false,\n      toxicity: false,\n      speciesList: false,\n      pmr: false,\n      goDownload: false\n    };\n    this.handleAllCheck = this.handleAllCheck.bind(this);\n    this.handleAllUncheck = this.handleAllUncheck.bind(this);\n    this.downloadFile = this.downloadFile.bind(this);\n  }\n  /*  NOTE: Upon initial click (onchange), toggle button acquires the current this.state.value\n   *  that is set, and then changes after the next several clicks (onchange).\n   *  Basically, if this.state.value : false, then state:false is state:true and vice versa.\n   */\n\n\n  handleAllCheck() {\n    this.setState({\n      monitoring_site: 'all_monitoring_sites',\n      temp: true,\n      salinity: true,\n      turbidity: true,\n      ph: true,\n      do: true,\n      chl_a: true,\n      toxicity: true,\n      speciesList: true,\n      pmr: true,\n      goDownload: true\n    });\n  }\n\n  handleAllUncheck() {\n    this.setState({\n      monitoring_site: '',\n      temp: false,\n      salinity: false,\n      turbidity: false,\n      ph: false,\n      do: false,\n      chl_a: false,\n      toxicity: false,\n      speciesList: false,\n      pmr: false,\n      goDownload: false\n    });\n  }\n\n  async componentDidMount() {\n    await axios.get('http://' + URL + ':8000/api/download/?ordering=time').then(res => {\n      const exportData = res.data;\n      this.setState({\n        exportData\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  downloadFile() {\n    let obj = [];\n\n    if (this.state.monitoring_site === 'bolinao') {\n      obj = this.state.exportData.filter(station => station.station_name === 6);\n    } else if (this.state.monitoring_site === 'manila_bay') {\n      obj = this.state.exportData.filter(station => station.station_name === 13);\n    } else if (this.state.monitoring_site === 'roxas') {\n      obj = this.state.exportData.filter(station => station.station_name === 12);\n    } else if (this.state.monitoring_site === 'samar_leyte') {\n      obj = this.state.exportData.filter(station => station.station_name === 10);\n    }\n\n    this.setState({\n      dataToCsv: obj\n    });\n    console.log(obj);\n    console.log(this.state.dataToCsv);\n    console.log(this.state.exportData);\n  }\n\n  render() {\n    console.log(this.state.monitoring_site);\n    const goDownload = this.state.goDownload;\n    const exportData = this.state.exportData;\n    const dataToCsv = this.state.dataToCsv;\n    /*var csv = [];\n    if(exportData !== ''){\n      csv = Papa.unparse(exportData);\n    }*/\n\n    /*console.log({exportData});\n    console.log(exportData);*/\n\n    const options = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Form.Select, {\n      className: \"w-auto mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"asc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Newest\"), React.createElement(\"option\", {\n      value: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Oldest\")), React.createElement(Form.Input, {\n      icon: \"search\",\n      placeholder: \"Search photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }));\n    return React.createElement(SiteWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Page.Content, {\n      title: \"Site Monitoring Data Viewer and Downloader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Form.StaticText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Dolor sit amet consectetur adipiscing elit duis tristique sollicitudin nibh. Dolor morbi non arcu risus quis varius quam. Nunc congue nisi vitae suscipit tellus mauris. Tincidunt id aliquet risus feugiat in.\"))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Grid.Col, {\n      lg: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(MapMonitoring, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }))), React.createElement(Grid.Col, {\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Data Download Selection\")), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      label: \"Monitoring Sites\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Form.Radio, {\n      label: \"Bolinao, Pangasinan\",\n      name: \"radio_monitoring_sites\",\n      value: \"bolinao\",\n      checked: this.state.monitoring_site === 'bolinao',\n      onChange: this.toggleMonitoringSite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(Form.Radio, {\n      label: \"Manila Bay\",\n      name: \"radio_monitoring_sites\",\n      value: \"manila_bay\",\n      checked: this.state.monitoring_site === 'manila_bay',\n      onChange: this.toggleMonitoringSite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(Form.Radio, {\n      label: \"Roxas, Capiz\",\n      name: \"radio_monitoring_sites\",\n      value: \"roxas\",\n      checked: this.state.monitoring_site === 'roxas',\n      onChange: this.toggleMonitoringSite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(Form.Radio, {\n      label: \"Samar - Leyte\",\n      name: \"radio_monitoring_sites\",\n      value: \"samar_leyte\",\n      checked: this.state.monitoring_site === 'samar_leyte',\n      onChange: this.toggleMonitoringSite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(Form.Radio, {\n      label: \"All Sites\",\n      name: \"radio_monitoring_sites\",\n      value: \"all_monitoring_sites\",\n      checked: this.state.monitoring_site === 'all_monitoring_sites',\n      onChange: this.toggleMonitoringSite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      label: \"Sensor Data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Form.Checkbox, {\n      label: \"Temperature\",\n      name: \"radio_sensor_data\",\n      value: \"temp\",\n      checked: this.state.temp,\n      onChange: this.toggleTemp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), React.createElement(Form.Checkbox, {\n      label: \"Salinity\",\n      name: \"radio_sensor_data\",\n      value: \"salinity\",\n      checked: this.state.salinity,\n      onChange: this.toggleSalinity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(Form.Checkbox, {\n      label: \"Turbidity\",\n      name: \"radio_sensor_data\",\n      value: \"turbidity\",\n      checked: this.state.turbidity,\n      onChange: this.toggleTurbidity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(Form.Checkbox, {\n      label: \"pH\",\n      name: \"radio_sensor_data\",\n      value: \"ph\",\n      checked: this.state.ph,\n      onChange: this.togglePH,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(Form.Checkbox, {\n      label: \"Dissolved Oxygen\",\n      name: \"radio_sensor_data\",\n      value: \"do\",\n      checked: this.state.do,\n      onChange: this.toggleDO,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(Form.Checkbox, {\n      label: \"Chlorophyll-A\",\n      name: \"radio_sensor_data\",\n      value: \"chl_a\",\n      checked: this.state.chl_a,\n      onChange: this.toggleChlA,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      label: \"Biological Data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(Form.Checkbox, {\n      label: \"Toxicity\",\n      name: \"radio_biological_data\",\n      value: \"toxicity\",\n      checked: this.state.toxicity,\n      onChange: this.toggleToxicity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(Form.Checkbox, {\n      label: \"Species List\",\n      name: \"radio_biological_data\",\n      value: \"species_list\",\n      checked: this.state.speciesList,\n      onChange: this.toggleSpeciesList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(Form.Checkbox, {\n      label: \"Predictive Model Results\",\n      name: \"radio_biological_data\",\n      value: \"pmr\",\n      checked: this.state.pmr,\n      onChange: this.togglePMR,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }))), React.createElement(Card.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-link\",\n      onClick: () => {\n        this.handleAllCheck();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Select All\"), \"|\", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-link\",\n      onClick: () => {\n        this.handleAllUncheck();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Unselect All\")), React.createElement(\"div\", {\n      className: \"col text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, goDownload ? React.createElement(CsvDownloader, {\n      datas: dataToCsv,\n      filename: \"habdata\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(Button, {\n      pill: true,\n      color: \"primary\",\n      type: \"button\",\n      icon: \"download\",\n      onClick: () => {\n        this.downloadFile();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Download\")) : React.createElement(Button, {\n      pill: true,\n      color: \"primary\",\n      type: \"button\",\n      icon: \"download\",\n      onClick: () => {\n        this.handleAllUncheck();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Download\"))))))));\n  }\n\n}","map":{"version":3,"sources":["/home/pul/Projects/hab-hub/frontend/src/SiteMonitoringPage.react.js"],"names":["React","PureComponent","axios","Papa","CsvDownloader","Leaflet","Page","Grid","Container","Form","Card","Button","MapMonitoring","SiteWrapper","Icon","Default","imagePath","URL","SiteMonitoringPage","constructor","props","toggleMonitoringSite","e","setState","monitoring_site","target","value","goDownload","toggleTemp","temp","state","toggleSalinity","salinity","toggleTurbidity","turbidity","togglePH","ph","toggleDO","do","toggleChlA","chl_a","toggleToxicity","toxicity","toggleSpeciesList","speciesList","togglePMR","pmr","exportData","dataToCsv","handleAllCheck","bind","handleAllUncheck","downloadFile","componentDidMount","get","then","res","data","catch","error","console","log","obj","filter","station","station_name","render","options"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport CsvDownloader from 'react-csv-downloader';\n\nimport Leaflet from 'leaflet';\nimport { \n  Page, \n  Grid,\n  Container, \n  Form,\n  Card,\n  Button,\n} from \"tabler-react\";\nimport MapMonitoring from \"./leaflet/map_monitoring\";\nimport SiteWrapper from \"./SiteWrapper.react\";\n\nLeaflet.Icon.Default.imagePath =\n  '//cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.4/images/'\n\n/*  NOTE: When deploying from remote server, always set url to that\n *  of remote url so axios will get values from remote and not from localhost.\n *  Change value for localhost or development server\n */\n//Localhost\nconst URL = 'localhost';\n//Biome Server\n//const URL = '10.199.20.25';\n\n\nexport default class SiteMonitoringPage extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      exportData                  : [],\n      dataToCsv                   : [],\n      monitoring_site             : 'all_monitoring_sites',\n      temp                        : false,\n      salinity                    : false,\n      turbidity                   : false,\n      ph                          : false,\n      do                          : false,\n      chl_a                       : false,\n      toxicity                    : false,\n      speciesList                 : false,\n      pmr                         : false,\n      goDownload                  : false\n    };\n\n    this.handleAllCheck = this.handleAllCheck.bind(this);\n    this.handleAllUncheck = this.handleAllUncheck.bind(this);\n    this.downloadFile = this.downloadFile.bind(this);\n  }\n  /*  NOTE: Upon initial click (onchange), toggle button acquires the current this.state.value\n   *  that is set, and then changes after the next several clicks (onchange).\n   *  Basically, if this.state.value : false, then state:false is state:true and vice versa.\n   */\n  toggleMonitoringSite = (e) => {\n    this.setState({\n      monitoring_site: e.target.value,\n      goDownload: true\n    });\n  }\n  toggleTemp = () => {\n    this.setState({temp: !this.state.temp});\n    if(this.state.temp === false){\n      this.setState({goDownload: true});\n    }\n  }\n  toggleSalinity = () => {\n    this.setState({salinity: !this.state.salinity});\n    if(this.state.salinity === false){\n      this.setState({goDownload: true});\n    }\n  }\n  toggleTurbidity = () => {\n    this.setState({turbidity: !this.state.turbidity});\n    if(this.state.turbidity === false){\n      this.setState({goDownload: true});\n    }\n  }\n  togglePH = () => {\n    this.setState({ph: !this.state.ph});\n    if(this.state.ph === false){\n      this.setState({goDownload: true});\n    }\n  }\n  toggleDO = () => {\n    this.setState({do: !this.state.do});\n    if(this.state.do === false){\n      this.setState({goDownload: true});\n    }\n  }\n  toggleChlA = () => {\n    this.setState({chl_a: !this.state.chl_a});\n    if(this.state.chl_a === false){\n      this.setState({goDownload: true});\n    }\n  }\n  toggleToxicity = () => {\n    this.setState({toxicity: !this.state.toxicity});\n    if(this.state.toxicity === false){\n      this.setState({goDownload: true});\n    }\n  }\n  toggleSpeciesList = () => {\n    this.setState({speciesList: !this.state.speciesList});\n    if(this.state.speciesList === false){\n      this.setState({goDownload: true});\n    }\n  }\n  togglePMR = () => {\n    this.setState({pmr: !this.state.pmr});\n    if(this.state.pmr === false){\n      this.setState({goDownload: true});\n    }\n  }\n\n  handleAllCheck(){\n    this.setState(\n      {\n        monitoring_site             : 'all_monitoring_sites',\n        temp                        : true,\n        salinity                    : true,\n        turbidity                   : true,\n        ph                          : true,\n        do                          : true,\n        chl_a                       : true,\n        toxicity                    : true,\n        speciesList                 : true,\n        pmr                         : true,\n        goDownload                  : true\n      }\n    );\n  }\n\n  handleAllUncheck(){\n    this.setState(\n      {\n        monitoring_site             : '',\n        temp                        : false,\n        salinity                    : false,\n        turbidity                   : false,\n        ph                          : false,\n        do                          : false,\n        chl_a                       : false,\n        toxicity                    : false,\n        speciesList                 : false,\n        pmr                         : false,\n        goDownload                  : false\n      }\n    );\n  }\n  \n  async componentDidMount(){\n    await axios.get('http://'+URL+':8000/api/download/?ordering=time')\n      .then(res => {\n        const exportData = res.data;\n        this.setState({exportData});\n      })\n      .catch(function (error) {\n      console.log(error);\n      })\n  }\n\n  downloadFile(){\n    let obj = [];\n    if(this.state.monitoring_site === 'bolinao'){\n      obj = this.state.exportData.filter(station => station.station_name === 6);\n    }\n    else if(this.state.monitoring_site === 'manila_bay'){\n      obj = this.state.exportData.filter(station => station.station_name === 13);\n    }\n    else if(this.state.monitoring_site === 'roxas'){\n      obj = this.state.exportData.filter(station => station.station_name === 12);\n    }\n    else if(this.state.monitoring_site === 'samar_leyte'){\n      obj = this.state.exportData.filter(station => station.station_name === 10);\n    }\n    this.setState({dataToCsv: obj});\n    console.log(obj);\n    console.log(this.state.dataToCsv);\n    console.log(this.state.exportData);\n  }\n\n  render(){\n     console.log(this.state.monitoring_site);\n    const goDownload = this.state.goDownload;\n    const {exportData} = this.state;\n    const {dataToCsv} = this.state;\n    /*var csv = [];\n    if(exportData !== ''){\n      csv = Papa.unparse(exportData);\n    }*/\n    /*console.log({exportData});\n    console.log(exportData);*/\n\n    const options = (\n      <React.Fragment>\n        <Form.Select className=\"w-auto mr-2\">\n          <option value=\"asc\">Newest</option>\n          <option value=\"desc\">Oldest</option>\n        </Form.Select>\n        <Form.Input icon=\"search\" placeholder=\"Search photo\" />\n      </React.Fragment>\n    );\n    return (\n      <SiteWrapper>\n        <Page.Content title=\"Site Monitoring Data Viewer and Downloader\">\n        <Grid.Row>\n          <Form.Group>\n            <Form.StaticText>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Dolor sit amet consectetur adipiscing elit duis tristique sollicitudin nibh. Dolor morbi non arcu risus quis varius quam. Nunc congue nisi vitae suscipit tellus mauris. Tincidunt id aliquet risus feugiat in.\n            </Form.StaticText>\n          </Form.Group>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col lg={9}>\n            <Container>\n              <MapMonitoring />\n            </Container>\n          </Grid.Col>\n          <Grid.Col lg={3}>\n          <Card>\n            <Card.Header>\n              <Card.Title>Data Download Selection</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Form.Group label=\"Monitoring Sites\">\n                <Form.Radio\n                  label=\"Bolinao, Pangasinan\"\n                  name=\"radio_monitoring_sites\"\n                  value=\"bolinao\"\n                  checked={this.state.monitoring_site === 'bolinao'}\n                  onChange={this.toggleMonitoringSite}\n                />\n                <Form.Radio\n                  label=\"Manila Bay\"\n                  name=\"radio_monitoring_sites\"\n                  value=\"manila_bay\"\n                  checked={this.state.monitoring_site === 'manila_bay'}\n                  onChange={this.toggleMonitoringSite}\n                />\n                <Form.Radio\n                  label=\"Roxas, Capiz\"\n                  name=\"radio_monitoring_sites\"\n                  value=\"roxas\"\n                  checked={this.state.monitoring_site === 'roxas'}\n                  onChange={this.toggleMonitoringSite}\n                />\n                <Form.Radio\n                  label=\"Samar - Leyte\"\n                  name=\"radio_monitoring_sites\"\n                  value=\"samar_leyte\"\n                  checked={this.state.monitoring_site === 'samar_leyte'}\n                  onChange={this.toggleMonitoringSite}\n                />\n                <Form.Radio\n                  label=\"All Sites\"\n                  name=\"radio_monitoring_sites\"\n                  value=\"all_monitoring_sites\"\n                  checked={this.state.monitoring_site === 'all_monitoring_sites'}\n                  onChange={this.toggleMonitoringSite}\n                />\n              </Form.Group>\n              <Form.Group label=\"Sensor Data\">\n                <Form.Checkbox\n                  label=\"Temperature\"\n                  name=\"radio_sensor_data\"\n                  value=\"temp\"\n                  checked={this.state.temp}\n                  onChange={this.toggleTemp}\n                />\n                <Form.Checkbox\n                  label=\"Salinity\"\n                  name=\"radio_sensor_data\"\n                  value=\"salinity\"\n                  checked={this.state.salinity}\n                  onChange={this.toggleSalinity}\n                />\n                <Form.Checkbox\n                  label=\"Turbidity\"\n                  name=\"radio_sensor_data\"\n                  value=\"turbidity\"\n                  checked={this.state.turbidity}\n                  onChange={this.toggleTurbidity}\n                />\n                <Form.Checkbox\n                  label=\"pH\"\n                  name=\"radio_sensor_data\"\n                  value=\"ph\"\n                  checked={this.state.ph}\n                  onChange={this.togglePH}\n                />\n                <Form.Checkbox\n                  label=\"Dissolved Oxygen\"\n                  name=\"radio_sensor_data\"\n                  value=\"do\"\n                  checked={this.state.do}\n                  onChange={this.toggleDO}\n                />\n                <Form.Checkbox\n                  label=\"Chlorophyll-A\"\n                  name=\"radio_sensor_data\"\n                  value=\"chl_a\"\n                  checked={this.state.chl_a}\n                  onChange={this.toggleChlA}\n                />\n              </Form.Group>\n              <Form.Group label=\"Biological Data\">\n                <Form.Checkbox\n                  label=\"Toxicity\"\n                  name=\"radio_biological_data\"\n                  value=\"toxicity\"\n                  checked={this.state.toxicity}\n                  onChange={this.toggleToxicity}\n                />\n                <Form.Checkbox\n                  label=\"Species List\"\n                  name=\"radio_biological_data\"\n                  value=\"species_list\"\n                  checked={this.state.speciesList}\n                  onChange={this.toggleSpeciesList}\n                />\n                <Form.Checkbox\n                  label=\"Predictive Model Results\"\n                  name=\"radio_biological_data\"\n                  value=\"pmr\"\n                  checked={this.state.pmr}\n                  onChange={this.togglePMR}\n                />\n              </Form.Group>\n            </Card.Body>\n            <Card.Footer>\n              <div className=\"col text-center\">\n                <button type=\"button\" className=\"btn btn-link\" onClick={() => {this.handleAllCheck()}}>Select All</button>|\n                <button type=\"button\" className=\"btn btn-link\" onClick={() => {this.handleAllUncheck()}}>Unselect All</button>\n              </div>\n              <div className=\"col text-center\">\n                {goDownload ? (\n                  <CsvDownloader datas={dataToCsv} filename=\"habdata\">\n                  <Button pill color=\"primary\" type=\"button\" icon=\"download\" onClick={() => {this.downloadFile()}}>Download</Button>\n                </CsvDownloader>)\n                :(\n                  <Button pill color=\"primary\" type=\"button\" icon=\"download\" onClick={() => {this.handleAllUncheck()}}>Download</Button>\n                )\n                }\n              </div>\n            </Card.Footer>\n          </Card>\n          </Grid.Col>\n        </Grid.Row>\n        </Page.Content>\n      </SiteWrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}