{"ast":null,"code":"import _classCallCheck from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/pul/hab_ews/frontend/hab_ews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { VideoOverlay as LeafletVideoOverlay, latLngBounds } from 'leaflet';\nimport { withLeaflet } from './context';\nimport MapLayer from './MapLayer';\n\nvar VideoOverlay =\n/*#__PURE__*/\nfunction (_MapLayer) {\n  _inherits(VideoOverlay, _MapLayer);\n\n  function VideoOverlay() {\n    _classCallCheck(this, VideoOverlay);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VideoOverlay).apply(this, arguments));\n  }\n\n  _createClass(VideoOverlay, [{\n    key: \"createLeafletElement\",\n    value: function createLeafletElement(props) {\n      return new LeafletVideoOverlay(props.url, props.bounds, this.getOptions(props));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      _get(_getPrototypeOf(VideoOverlay.prototype), \"componentDidMount\", this).call(this);\n\n      if (this.props.play === true) {\n        this.leafletElement.getElement().play();\n      }\n    }\n  }, {\n    key: \"updateLeafletElement\",\n    value: function updateLeafletElement(fromProps, toProps) {\n      if (toProps.url !== fromProps.url) {\n        this.leafletElement.setUrl(toProps.url);\n      }\n\n      if (toProps.bounds !== fromProps.bounds) {\n        this.leafletElement.setBounds(latLngBounds(toProps.bounds));\n      }\n\n      if (toProps.opacity !== fromProps.opacity) {\n        this.leafletElement.setOpacity(toProps.opacity);\n      }\n\n      if (toProps.zIndex !== fromProps.zIndex) {\n        this.leafletElement.setZIndex(toProps.zIndex);\n      } // flowlint-next-line sketchy-null-bool:off\n\n\n      if (toProps.play === true && !fromProps.play) {\n        this.leafletElement.getElement().play(); // flowlint-next-line sketchy-null-bool:off\n      } else if (!toProps.play && fromProps.play === true) {\n        this.leafletElement.getElement().pause();\n      }\n    }\n  }]);\n\n  return VideoOverlay;\n}(MapLayer);\n\nexport default withLeaflet(VideoOverlay);","map":{"version":3,"sources":["/home/pul/hab_ews/frontend/hab_ews/src/leaflet/src/VideoOverlay.js"],"names":["VideoOverlay","LeafletVideoOverlay","latLngBounds","withLeaflet","MapLayer","props","url","bounds","getOptions","play","leafletElement","getElement","fromProps","toProps","setUrl","setBounds","opacity","setOpacity","zIndex","setZIndex","pause"],"mappings":";;;;;;AAEA,SAASA,YAAY,IAAIC,mBAAzB,EAA8CC,YAA9C,QAAkE,SAAlE;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAaMJ,Y;;;;;;;;;;;;;yCACiBK,K,EAA8B;AACjD,aAAO,IAAIJ,mBAAJ,CACLI,KAAK,CAACC,GADD,EAELD,KAAK,CAACE,MAFD,EAGL,KAAKC,UAAL,CAAgBH,KAAhB,CAHK,CAAP;AAKD;;;wCAEmB;AAClB;;AACA,UAAI,KAAKA,KAAL,CAAWI,IAAX,KAAoB,IAAxB,EAA8B;AAC5B,aAAKC,cAAL,CAAoBC,UAApB,GAAiCF,IAAjC;AACD;AACF;;;yCAEoBG,S,EAAkBC,O,EAAgB;AACrD,UAAIA,OAAO,CAACP,GAAR,KAAgBM,SAAS,CAACN,GAA9B,EAAmC;AACjC,aAAKI,cAAL,CAAoBI,MAApB,CAA2BD,OAAO,CAACP,GAAnC;AACD;;AACD,UAAIO,OAAO,CAACN,MAAR,KAAmBK,SAAS,CAACL,MAAjC,EAAyC;AACvC,aAAKG,cAAL,CAAoBK,SAApB,CAA8Bb,YAAY,CAACW,OAAO,CAACN,MAAT,CAA1C;AACD;;AACD,UAAIM,OAAO,CAACG,OAAR,KAAoBJ,SAAS,CAACI,OAAlC,EAA2C;AACzC,aAAKN,cAAL,CAAoBO,UAApB,CAA+BJ,OAAO,CAACG,OAAvC;AACD;;AACD,UAAIH,OAAO,CAACK,MAAR,KAAmBN,SAAS,CAACM,MAAjC,EAAyC;AACvC,aAAKR,cAAL,CAAoBS,SAApB,CAA8BN,OAAO,CAACK,MAAtC;AACD,OAZoD,CAarD;;;AACA,UAAIL,OAAO,CAACJ,IAAR,KAAiB,IAAjB,IAAyB,CAACG,SAAS,CAACH,IAAxC,EAA8C;AAC5C,aAAKC,cAAL,CAAoBC,UAApB,GAAiCF,IAAjC,GAD4C,CAE5C;AACD,OAHD,MAGO,IAAI,CAACI,OAAO,CAACJ,IAAT,IAAiBG,SAAS,CAACH,IAAV,KAAmB,IAAxC,EAA8C;AACnD,aAAKC,cAAL,CAAoBC,UAApB,GAAiCS,KAAjC;AACD;AACF;;;;EApCwBhB,Q;;AAuC3B,eAAeD,WAAW,CAAsBH,YAAtB,CAA1B","sourcesContent":["// @flow\n\nimport { VideoOverlay as LeafletVideoOverlay, latLngBounds } from 'leaflet'\n\nimport { withLeaflet } from './context'\nimport MapLayer from './MapLayer'\nimport type { LatLngBounds, MapLayerProps } from './types'\n\ntype LeafletElement = LeafletVideoOverlay\ntype Props = {\n  attribution?: string,\n  bounds: LatLngBounds,\n  opacity?: number,\n  play?: boolean,\n  url: string | string[] | HTMLVideoElement,\n  zIndex?: number,\n} & MapLayerProps\n\nclass VideoOverlay extends MapLayer<LeafletElement, Props> {\n  createLeafletElement(props: Props): LeafletElement {\n    return new LeafletVideoOverlay(\n      props.url,\n      props.bounds,\n      this.getOptions(props),\n    )\n  }\n\n  componentDidMount() {\n    super.componentDidMount()\n    if (this.props.play === true) {\n      this.leafletElement.getElement().play()\n    }\n  }\n\n  updateLeafletElement(fromProps: Props, toProps: Props) {\n    if (toProps.url !== fromProps.url) {\n      this.leafletElement.setUrl(toProps.url)\n    }\n    if (toProps.bounds !== fromProps.bounds) {\n      this.leafletElement.setBounds(latLngBounds(toProps.bounds))\n    }\n    if (toProps.opacity !== fromProps.opacity) {\n      this.leafletElement.setOpacity(toProps.opacity)\n    }\n    if (toProps.zIndex !== fromProps.zIndex) {\n      this.leafletElement.setZIndex(toProps.zIndex)\n    }\n    // flowlint-next-line sketchy-null-bool:off\n    if (toProps.play === true && !fromProps.play) {\n      this.leafletElement.getElement().play()\n      // flowlint-next-line sketchy-null-bool:off\n    } else if (!toProps.play && fromProps.play === true) {\n      this.leafletElement.getElement().pause()\n    }\n  }\n}\n\nexport default withLeaflet<Props, VideoOverlay>(VideoOverlay)\n"]},"metadata":{},"sourceType":"module"}